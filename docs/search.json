[{"path":"https://mountainmath.github.io/cansim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Jens von Bergmann Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mountainmath.github.io/cansim/articles/cansim.html","id":"about","dir":"Articles","previous_headings":"","what":"About","title":"Getting started with the cansim package","text":"cansim package provides R bindings Statistics Canada’s main socioeconomic time series database, previously known (frequently referred package, elsewhere, ) CANSIM. Data can accessed table number, vector table number coordinate. package accepts old new (NDM) CANSIM table catalogue numbers.","code":""},{"path":"https://mountainmath.github.io/cansim/articles/cansim.html","id":"installing-cansim","dir":"Articles","previous_headings":"","what":"Installing cansim","title":"Getting started with the cansim package","text":"cansim package available CRAN can installed directly using default package installation process: Alternatively, latest development version package can downloaded Github using devtools remotes packages.","code":"install.packages(\"cansim\") # install.packages(\"remotes\") remotes::install_github(\"mountainmath/cansim\")  library(cansim)"},{"path":"https://mountainmath.github.io/cansim/articles/cansim.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Getting started with the cansim package","text":"know data table catalogue number interested , use get_cansim download entire table. default, data tables retrieved package comes original format provided Statistics Canada enriched several added columns transformations. additional Date column added tries intelligently infer Date object REF_DATE column. additional val_norm column added, applies appropriate scaling factor VALUE column. data coded “thousands dollars”, value 2.4 VALUE column converted value 2400 val_norm column. Similarly, percentage 12.2 VALUE column converted value 0.122 val_norm column. Categorical variables converted factors , necessarily, de-duplicated appending name “parent” category parenthesis. ensures column variables unique retain original ordering. Taking look overview data within table common first step. implemented package get_cansim_table_overview(table_number) function. table number unknown, can browse available tables search survey name, keyword title. Individual series Statistics Canada data tables can also accessed using individual numbered vectors. especially useful building reports using specific indicators. convenience, cansim package allows users specify named vectors, label field added returned data frame containing specified name vector. Larger tables, tables update infrequently can cached database form faster access better performance. get_cansim_connection function facilitates , works mostly identitcal get_cansim function, returns database connection local database StatCan Table data. Calling collect_and_normalize, possibly filtering data, adds metadata loads data memory form identical data retrieved get_cansim. information refer Working large tables vignette.","code":"data <- get_cansim(\"14-10-0293\") #> Accessing CANSIM NDM product 14-10-0293 from Statistics Canada #> Parsing data head(data) #> # A tibble: 6 × 24 #>   REF_DATE Date       GEO    DGUID      GeoUID Labour force charact…¹ Statistics #>   <chr>    <date>     <fct>  <chr>      <chr>  <fct>                  <fct>      #> 1 2001-03  2001-03-01 Canada 2016A0000… 11124  Population             Estimate   #> 2 2001-03  2001-03-01 Canada 2016A0000… 11124  Labour force           Estimate   #> 3 2001-03  2001-03-01 Canada 2016A0000… 11124  Labour force           Standard … #> 4 2001-03  2001-03-01 Canada 2016A0000… 11124  Labour force           Standard … #> 5 2001-03  2001-03-01 Canada 2016A0000… 11124  Employment             Estimate   #> 6 2001-03  2001-03-01 Canada 2016A0000… 11124  Employment             Standard … #> # ℹ abbreviated name: ¹​`Labour force characteristics` #> # ℹ 17 more variables: VALUE <dbl>, val_norm <dbl>, UOM <chr>, UOM_ID <chr>, #> #   SCALAR_FACTOR <chr>, SCALAR_ID <chr>, VECTOR <chr>, COORDINATE <chr>, #> #   STATUS <chr>, SYMBOL <chr>, TERMINATED <chr>, DECIMALS <chr>, #> #   `Hierarchy for GEO` <chr>, #> #   `Classification Code for Labour force characteristics` <chr>, #> #   `Hierarchy for Labour force characteristics` <chr>, … get_cansim_table_overview(\"14-10-0293\") #> Reading CANSIM NDM product 14-10-0293 information from cache. #> Labour force characteristics by economic region, three-month moving average, unadjusted for seasonality, last 5 months, inactive #> CANSIM Table 14-10-0293 #> Start Reference Period: 2001-03-01, End Reference Period: 2020-12-01, Frequency: Monthly #>  #> Column Geography (76) #> Newfoundland and Labrador, Prince Edward Island, Nova Scotia, New Brunswick, Quebec, Ontario, Manitoba, Saskatchewan, Alberta, British Columbia, ... #>  #> Column Labour force characteristics (10) #> Labour force, Not in labour force, Employment, Unemployment, Full-time employment, Part-time employment, Population, Unemployment rate, Participation rate, Employment rate #>  #> Column Statistics (3) #> Estimate, Standard error of estimate, Standard error of year-over-year change search_cansim_cubes(\"housing price indexes\") #> Retrieving cube information from StatCan servers... #> # A tibble: 2 × 20 #>   cansim_table_number cubeTitleEn   cubeTitleFr productId cansimId cubeStartDate #>   <chr>               <chr>         <chr>       <chr>     <chr>    <date>        #> 1 18-10-0073          New housing … Indices de… 18100073  327-0005 1981-01-01    #> 2 18-10-0095          New housing … Indices de… 18100095  327-0029 1981-01-01    #> # ℹ 14 more variables: cubeEndDate <date>, releaseTime <dttm>, archived <lgl>, #> #   subjectCode <chr>, surveyCode <chr>, frequencyCode <chr>, #> #   corrections <chr>, issueDate <date>, dimensionNameEn <chr>, #> #   dimensionNameFr <chr>, surveyEn <chr>, surveyFr <chr>, subjectEn <chr>, #> #   subjectFr <chr> get_cansim_vector(c(\"Metro Van Apartment Construction Price Index\"=\"v44176267\",                     \"Metro Van CPI\"=\"v41692930\"),                   start_time = \"2015-05-01\",                   end_time=\"2015-08-01\") |>   dplyr::select(Date,GEO,label,VALUE,val_norm) #> Accessing CANSIM NDM vectors from Statistics Canada #> # A tibble: 5 × 5 #>   Date       GEO                         label                    VALUE val_norm #>   <date>     <fct>                       <chr>                    <dbl>    <dbl> #> 1 2015-05-01 Vancouver, British Columbia Metro Van CPI             122.     122. #> 2 2015-06-01 Vancouver, British Columbia Metro Van CPI             122.     122. #> 3 2015-07-01 Vancouver, British Columbia Metro Van CPI             122.     122. #> 4 2015-08-01 Vancouver, British Columbia Metro Van CPI             123.     123. #> 5 2015-07-01 Vancouver, British Columbia Metro Van Apartment Con…  153      153 data <- get_cansim_connection(\"14-10-0293\") |>   collect_and_normalize() #> Reading CANSIM NDM product 14-10-0293 from parquet. head(data) #> # A tibble: 6 × 24 #>   REF_DATE Date       GEO    DGUID      GeoUID Labour force charact…¹ Statistics #>   <chr>    <date>     <fct>  <chr>      <chr>  <fct>                  <fct>      #> 1 2001-03  2001-03-01 Canada 2016A0000… 11124  Population             Estimate   #> 2 2001-03  2001-03-01 Canada 2016A0000… 11124  Labour force           Estimate   #> 3 2001-03  2001-03-01 Canada 2016A0000… 11124  Labour force           Standard … #> 4 2001-03  2001-03-01 Canada 2016A0000… 11124  Labour force           Standard … #> 5 2001-03  2001-03-01 Canada 2016A0000… 11124  Employment             Estimate   #> 6 2001-03  2001-03-01 Canada 2016A0000… 11124  Employment             Standard … #> # ℹ abbreviated name: ¹​`Labour force characteristics` #> # ℹ 17 more variables: VALUE <dbl>, val_norm <dbl>, UOM <chr>, UOM_ID <chr>, #> #   SCALAR_FACTOR <chr>, SCALAR_ID <chr>, VECTOR <chr>, COORDINATE <chr>, #> #   STATUS <chr>, SYMBOL <chr>, TERMINATED <chr>, DECIMALS <chr>, #> #   `Hierarchy for GEO` <chr>, #> #   `Classification Code for Labour force characteristics` <chr>, #> #   `Hierarchy for Labour force characteristics` <chr>, …"},{"path":"https://mountainmath.github.io/cansim/articles/cansim.html","id":"license","dir":"Articles","previous_headings":"","what":"License","title":"Getting started with the cansim package","text":"code package licensed MIT license. bundled table metadata Sysdata.R, well Statistics Canada data retrieved using package made available Statistics Canada Open Licence Agreement, copy included R folder. Statistics Canada Open Licence Agreement requires :","code":"Subject to this agreement, Statistics Canada grants you a worldwide, royalty-free, non-exclusive licence to:    - use, reproduce, publish, freely distribute, or sell the Information;   - use, reproduce, publish, freely distribute, or sell Value-added Products; and,   - sublicence any or all such rights, under terms consistent with this agreement.  In doing any of the above, you shall:    - reproduce the Information accurately;   - not use the Information in a way that suggests that Statistics Canada endorses you or your use of the Information;   - not misrepresent the Information or its source;   - use the Information in a manner that does not breach or infringe any applicable laws;   - not merge or link the Information with any other databases for the purpose of attempting to identify an individual person, business or organization; and   - not present the Information in such a manner that gives the appearance that you may have received, or had access to, information held by Statistics Canada about any identifiable individual person, business or organization."},{"path":"https://mountainmath.github.io/cansim/articles/cansim.html","id":"attribution","dir":"Articles","previous_headings":"","what":"Attribution","title":"Getting started with the cansim package","text":"Subject Statistics Canada Open Licence Agreement, licensed products using Statistics Canada data employ following acknowledgement source:","code":"Acknowledgment of Source  (a) You shall include and maintain the following notice on all licensed rights of the Information:    - Source: Statistics Canada, name of product, reference date. Reproduced and distributed on an \"as is\" basis with the permission of Statistics Canada.  (b) Where any Information is contained within a Value-added Product, you shall include on such Value-added Product the following notice:    - Adapted from Statistics Canada, name of product, reference date. This does not constitute an endorsement by Statistics Canada of this product."},{"path":"https://mountainmath.github.io/cansim/articles/listing_cansim_tables.html","id":"listing-and-filtering-tables","dir":"Articles","previous_headings":"","what":"Listing and filtering tables","title":"Listing Statistics Canada data tables","text":"Calling list_cansim_cubes returns data frame useful metadata available tables. 21 fields metadata table including title, English French, keyword sets, notes, table numbers. appropriate table can found subsetting filtering properties want use find appropriate tables. search came two tables. example interested unemployment rate 2015 onward Lower Mainland, Vancouver Island, Okanagan economic regions Labour Force Characteristics table. use tidyr package reshape data long format wider format. can visualize results ggplot2.","code":"library(cansim)  names(list_cansim_cubes()) #> Retrieving cube information from StatCan servers... #>  [1] \"cansim_table_number\" \"cubeTitleEn\"         \"cubeTitleFr\"         #>  [4] \"productId\"           \"cansimId\"            \"cubeStartDate\"       #>  [7] \"cubeEndDate\"         \"releaseTime\"         \"archived\"            #> [10] \"subjectCode\"         \"surveyCode\"          \"frequencyCode\"       #> [13] \"corrections\"         \"issueDate\"           \"dimensionNameEn\"     #> [16] \"dimensionNameFr\"     \"surveyEn\"            \"surveyFr\"            #> [19] \"subjectEn\"           \"subjectFr\" library(dplyr, warn.conflicts = FALSE)  list_cansim_cubes() %>%    filter(grepl(\"Labour force characteristics\",cubeTitleEn),           grepl(\"economic region\",cubeTitleEn)) %>%    select(cansim_table_number,cubeTitleEn) #> Retrieving cube information from temporary cache. #> # A tibble: 4 × 2 #>   cansim_table_number cubeTitleEn                                                #>   <chr>               <chr>                                                      #> 1 14-10-0090          Labour force characteristics by province, territory and e… #> 2 14-10-0293          Labour force characteristics by economic region, three-mo… #> 3 14-10-0462          Labour force characteristics by economic region, three-mo… #> 4 14-10-0464          Labour force characteristics by province, territory and e… library(tidyr)  selected_table <- \"14-10-0293\"  data <-get_cansim(selected_table) %>%    filter(grepl(\"Mainland|Vancouver Island|Okanagan\", GEO),          Date>=as.Date(\"2015-01-01\"),          `Labour force characteristics`==\"Unemployment rate\") %>%   select(Date, GEO, Statistics, val_norm) %>%   spread(key=\"Statistics\", value=val_norm) #> Accessing CANSIM NDM product 14-10-0293 from Statistics Canada #> Parsing data library(ggplot2) ggplot(data, aes(x=Date, group = GEO,y=Estimate)) +   geom_ribbon(aes(ymin=Estimate - `Standard error of estimate`,                   ymax=Estimate + `Standard error of estimate`, fill=\"\"),               alpha=0.8) +   geom_line(aes(color=GEO)) +   scale_y_continuous(labels=scales::percent) +   scale_fill_manual(name = \"\", values=\"grey80\", label=\"Standard error\") +   theme_bw() +    labs(title = \"Comparison of unemployment rate by economic region\",        y = \"Unemployment Rate\",         x = \"\",        color = \"\",        caption=paste0(\"CANSIM \", selected_table))"},{"path":"https://mountainmath.github.io/cansim/articles/partial_table_data_download.html","id":"using-vectors-instead-of-coordinates","dir":"Articles","previous_headings":"","what":"Using vectors instead of coordinates","title":"Partial table data download","text":"can achieved downloading data vectors. need add vector information table template. Vector information available coordinates, also gives effective way filter invalid coordinate combinations template. Vector information available census data tables. gives us data , possibly shorter time series coordinates querying data vector pull data times specific vector available. accessed vector coordinate data differ limited way, values difference NA won’t affect results. completeness plot vector data obtain identical graph.","code":"bp_template_filtered_vecotrs <- bp_template_filtered |>   add_cansim_vectors_to_template()  bp_data_vector <- bp_template_filtered_vecotrs$VECTOR |>   na.omit() |>   get_cansim_vector() #> Accessing CANSIM NDM vectors from Statistics Canada bp_data_vector |>   mutate(Value=case_when( # count demolitions and deconversions as negative     Variables %in% c(\"Number of dwelling-units demolished\",\"Number of dwelling-units lost\") ~ - val_norm,     TRUE ~ val_norm   )) |>   mutate(Name=gsub(\", .+\",\"\",GEO),          Year=strftime(Date,\"%Y\")) |>   summarize(Value=sum(Value),n=n(),.by=c(Name,Year,`Type of work`)) |>   filter(n==12,!is.na(Value)) |> # only show years with complete 12 months of data   ggplot(aes(x=Year,y=Value,fill=`Type of work`)) +   geom_bar(stat=\"identity\") +   facet_wrap(~Name,scales=\"free_y\") +   scale_y_continuous(labels=scales::comma) +   theme(axis.text.x = element_text(angle=90, hjust=1)) +   labs(title=\"Building permits for residential structures in Canadian metro areas\",        y=\"Number of dwelling units\",        x=NULL,        fill=\"Metric\",        caption=\"StatCan Table 34-10-0285\")"},{"path":"https://mountainmath.github.io/cansim/articles/retrieving_cansim_vectors.html","id":"retrieving-individual-vectors","dir":"Articles","previous_headings":"","what":"Retrieving individual vectors","title":"Retrieving individual Statistics Canada vectors","text":"Many time-series data available Statistics Canada individual vector codes. vector codes follow naming format lower-case “v” identifying numbers. Time-series tables often bundle many series together, resulting large sometimes unwieldy files. Many users Canadian statistical data, often concerned specific time series CPI international arrivals, typically know exact series need. reason, cansim package also provides two functions make easier retrieve individual vectors: get_cansim_vector() get_cansim_vector_for_latest_periods().","code":""},{"path":"https://mountainmath.github.io/cansim/articles/retrieving_cansim_vectors.html","id":"get_cansim_vector","dir":"Articles","previous_headings":"","what":"get_cansim_vector()","title":"Retrieving individual Statistics Canada vectors","text":"Running search_cansim_cubes(\"consumer price index\") shows 33 tables results. However, tracking Canadian Consumer Price Index (CPI) time, might already know Statistics Canada vector code seasonally-unadjusted -items CPI value: v41690973. retrieve just data series without additional data available related tables, can use get_cansim_vector() function vector code date onwards want get vector results . call get_cansim_vector takes three inputs: string code (codes) vectors, start_time YYYY-MM-DD format, optional value end_time, also YYYY-MM-DD format. default, start_time end_time vectors uses Statistics Canada’s reference periods (“REF_DATE”) selecting date range data retrieved vectors. optional input parameters function. end_time provided, call use current date default series end time. optional parameter use_ref_date set FALSE, vector retrieval instead filter release date vector . Vectors can coerced list object order retrieve multiple series time. example, provincial seasonally-unadjusted CPI values vector codes. vector code British Columbia -items CPI v41692462. code retrieves monthly Canadian BC CPI values period January 2015 December 2017 . Monthly data series always dated first day month.","code":"get_cansim_vector(\"v41690973\",\"2015-01-01\") #> Accessing CANSIM NDM vectors from Statistics Canada #> # A tibble: 127 × 14 #>    REF_DATE   Date       GEO    Products and product …¹ VALUE val_norm SCALAR_ID #>    <chr>      <date>     <fct>  <fct>                   <dbl>    <dbl>     <int> #>  1 2015-01-01 2015-01-01 Canada All-items                124.     124.         0 #>  2 2015-02-01 2015-02-01 Canada All-items                125.     125.         0 #>  3 2015-03-01 2015-03-01 Canada All-items                126.     126.         0 #>  4 2015-04-01 2015-04-01 Canada All-items                126.     126.         0 #>  5 2015-05-01 2015-05-01 Canada All-items                127.     127.         0 #>  6 2015-06-01 2015-06-01 Canada All-items                127.     127.         0 #>  7 2015-07-01 2015-07-01 Canada All-items                127.     127.         0 #>  8 2015-08-01 2015-08-01 Canada All-items                127.     127.         0 #>  9 2015-09-01 2015-09-01 Canada All-items                127.     127.         0 #> 10 2015-10-01 2015-10-01 Canada All-items                127.     127.         0 #> # ℹ 117 more rows #> # ℹ abbreviated name: ¹​`Products and product groups` #> # ℹ 7 more variables: VECTOR <chr>, cansimTableNumber <chr>, COORDINATE <chr>, #> #   SYMBOL <int>, releaseTime <chr>, frequencyCode <int>, DECIMALS <int> vectors <- c(\"v41690973\",\"v41692462\")  get_cansim_vector(vectors, \"2017-01-01\") #> Accessing CANSIM NDM vectors from Statistics Canada #> # A tibble: 206 × 14 #>    REF_DATE   Date       GEO    Products and product …¹ VALUE val_norm SCALAR_ID #>    <chr>      <date>     <fct>  <fct>                   <dbl>    <dbl>     <int> #>  1 2017-01-01 2017-01-01 Canada All-items                130.     130.         0 #>  2 2017-02-01 2017-02-01 Canada All-items                130.     130.         0 #>  3 2017-03-01 2017-03-01 Canada All-items                130.     130.         0 #>  4 2017-04-01 2017-04-01 Canada All-items                130.     130.         0 #>  5 2017-05-01 2017-05-01 Canada All-items                130.     130.         0 #>  6 2017-06-01 2017-06-01 Canada All-items                130.     130.         0 #>  7 2017-07-01 2017-07-01 Canada All-items                130.     130.         0 #>  8 2017-08-01 2017-08-01 Canada All-items                130.     130.         0 #>  9 2017-09-01 2017-09-01 Canada All-items                131.     131.         0 #> 10 2017-10-01 2017-10-01 Canada All-items                131.     131.         0 #> # ℹ 196 more rows #> # ℹ abbreviated name: ¹​`Products and product groups` #> # ℹ 7 more variables: VECTOR <chr>, cansimTableNumber <chr>, COORDINATE <chr>, #> #   SYMBOL <int>, releaseTime <chr>, frequencyCode <int>, DECIMALS <int>"},{"path":"https://mountainmath.github.io/cansim/articles/retrieving_cansim_vectors.html","id":"get_cansim_vectors_for_latest_periods","dir":"Articles","previous_headings":"","what":"get_cansim_vectors_for_latest_periods()","title":"Retrieving individual Statistics Canada vectors","text":"vectors extend backwards significant number periods may interest. get_cansim_vectors_for_lates_periods() wrapper around get_cansim_vectors takes periods input instead arguments start_time end_time, provides data selected vector(s) last n periods data available, irrespective dates.","code":"get_cansim_vector_for_latest_periods(\"v41690973\", periods = 60) #> Accessing CANSIM NDM vectors from Statistics Canada #> # A tibble: 60 × 14 #>    REF_DATE   Date       GEO    Products and product …¹ VALUE val_norm SCALAR_ID #>    <chr>      <date>     <fct>  <fct>                   <dbl>    <dbl>     <int> #>  1 2020-08-01 2020-08-01 Canada All-items                137      137          0 #>  2 2020-09-01 2020-09-01 Canada All-items                137.     137.         0 #>  3 2020-10-01 2020-10-01 Canada All-items                138.     138.         0 #>  4 2020-11-01 2020-11-01 Canada All-items                138.     138.         0 #>  5 2020-12-01 2020-12-01 Canada All-items                137.     137.         0 #>  6 2021-01-01 2021-01-01 Canada All-items                138.     138.         0 #>  7 2021-02-01 2021-02-01 Canada All-items                139.     139.         0 #>  8 2021-03-01 2021-03-01 Canada All-items                140.     140.         0 #>  9 2021-04-01 2021-04-01 Canada All-items                140.     140.         0 #> 10 2021-05-01 2021-05-01 Canada All-items                141      141          0 #> # ℹ 50 more rows #> # ℹ abbreviated name: ¹​`Products and product groups` #> # ℹ 7 more variables: VECTOR <chr>, cansimTableNumber <chr>, COORDINATE <chr>, #> #   SYMBOL <int>, releaseTime <chr>, frequencyCode <int>, DECIMALS <int>"},{"path":"https://mountainmath.github.io/cansim/articles/retrieving_cansim_vectors.html","id":"naming-vector-series","dir":"Articles","previous_headings":"","what":"Naming vector series","title":"Retrieving individual Statistics Canada vectors","text":"examples, used v41690973 Canada v41692462 BC. can hard remember can get annoying work . vector retrieval functions cansim package allow named vector extraction. works providing user-determined string directly get_* call. may useful working table code vector codes information name become easy lose track .","code":""},{"path":"https://mountainmath.github.io/cansim/articles/retrieving_cansim_vectors.html","id":"normalizing-data","dir":"Articles","previous_headings":"","what":"Normalizing data","title":"Retrieving individual Statistics Canada vectors","text":"Data retrieved vectors also gains additional val_norm column normalized values.","code":""},{"path":"https://mountainmath.github.io/cansim/articles/retrieving_cansim_vectors.html","id":"putting-it-all-together","dir":"Articles","previous_headings":"","what":"Putting it all together","title":"Retrieving individual Statistics Canada vectors","text":"quick example uses list two named vectors starting date input value, converts values (“normalizes”) fly, prepares simple ggplot2 graphic. access metadata vectors can use get_cansim_vector_info call","code":"vectors <- c(\"Canadian CPI\"=\"v41690973\",              \"BC CPI\"=\"v41692462\")  data <- get_cansim_vector(vectors, \"2010-01-01\") #> Accessing CANSIM NDM vectors from Statistics Canada  library(ggplot2) ggplot(data,aes(x=Date,y=val_norm,color=label)) +   geom_line() +   labs(title=\"Consumer Price Index, January 2010 to September 2018\",        subtitle = \"Seasonally-unadjusted, all-items (2002 = 100)\",        caption=paste0(\"CANSIM vectors \",paste0(vectors,collapse = \", \")),x=\"\",y=\"\",color=\"\") get_cansim_vector_info(vectors) #> # A tibble: 2 × 10 #>   DECIMALS VECTOR    table      COORDINATE title_en title_fr   UOM frequencyCode #>      <int> <chr>     <chr>      <chr>      <chr>    <chr>    <int>         <int> #> 1        1 v41690973 18-10-0004 2.2        Canada;… Canada;…    17             6 #> 2        1 v41692462 18-10-0004 26.2       British… Colombi…    17             6 #> # ℹ 2 more variables: SCALAR_ID <int>, title <chr>"},{"path":"https://mountainmath.github.io/cansim/articles/working_with_hierarchies.html","id":"retrieving-metadata","dir":"Articles","previous_headings":"","what":"Retrieving metadata","title":"Working with Statistics Canada data table object hierarchies","text":"get_cansim_table_overview function displays overview table information. table yet downloaded cached first download table . Let’s take look ’s table interested .","code":"library(cansim)  # select a table number table_id = \"36-10-0402\"  # get table overview get_cansim_table_overview(table_id) #> Gross domestic product (GDP) at basic prices, by industry, provinces and territories #> CANSIM Table 36-10-0402 #> Start Reference Period: 1997-01-01, End Reference Period: 2024-01-01, Frequency: 12 #>  #> Column Geography (13) #> Newfoundland and Labrador, Prince Edward Island, Nova Scotia, New Brunswick, Quebec, Ontario, Manitoba, Saskatchewan, Alberta, British Columbia, ... #>  #> Column Prices (3) #> Current dollars, Chained (2017) dollars, Contributions to percent change #>  #> Column North American Industry Classification System (NAICS) (337) #> All industries, Goods-producing industries, Service-producing industries, Industrial production, Non-durable manufacturing industries, Durable manufacturing industries, Information and communication technology sector, Information and communication technology, manufacturing, Information and communication technology, services, Energy sector, ..."},{"path":"https://mountainmath.github.io/cansim/articles/working_with_hierarchies.html","id":"accessing-table-data","dir":"Articles","previous_headings":"","what":"Accessing table data","title":"Working with Statistics Canada data table object hierarchies","text":"see data set come three different measures 307 different NAICS values. Let’s load data focus just “Chained (2017) dollars”.","code":"library(dplyr, warn.conflicts = FALSE)  data <- get_cansim(table_id)  #> Reading CANSIM NDM product 36-10-0402 from cache.  selected_value = data$Prices[grepl(\"Chained\",data$Prices)] %>% unique() data <- data %>%    filter(Prices == selected_value)"},{"path":"https://mountainmath.github.io/cansim/articles/working_with_hierarchies.html","id":"taking-advantage-of-metadata","dir":"Articles","previous_headings":"","what":"Taking advantage of metadata","title":"Working with Statistics Canada data table object hierarchies","text":"table includes different levels NAICS categories one dimension. makes working data level rather cumbersome often interested specific sub-categories. internal hierarchy can help . Let’s first get overview data. can also use easily compute shares instead totals. can extract hierarchy using built-convenience function categories_for_level takes cansim-package retrieved data table object metadata input requires field extract categories well level indicating target depth level hierarchy wish extract.","code":"# Extract top-level hierarchy to calculate total top_level <- categories_for_level(data, \"North American Industry Classification System (NAICS)\",0)  # Extract total using hierarchy and calculate share by NAICS.  # This could also be done using grouping functions from dplyr,  # but we wanted to demonstrate how to use specific hierarchy levels.  total_data <- data %>%    filter(`North American Industry Classification System (NAICS)` %in% top_level) %>%    rename(Total = val_norm) %>%    select(Date, GEO, Total)  # Merge total back in and calculate share for every NAICS code data <- data %>%    left_join(total_data,by = c(\"Date\", \"GEO\")) %>%    mutate(Share = val_norm/Total)"},{"path":"https://mountainmath.github.io/cansim/articles/working_with_hierarchies.html","id":"hierarchies-in-more-detail","dir":"Articles","previous_headings":"","what":"Hierarchies in more detail","title":"Working with Statistics Canada data table object hierarchies","text":"hundreds NAICS codes many make sense time. can use categories_for_level reduce NAICS codes just first sub-level represents industry groups. can call subset cut_data. (Note NAICS data also includes composite groups industries, something like level 0.5 hierarchy, prefixed “T” want remove well.) still 22 level 1 categories, many sensibly visualize time. can use dplyr functions identify top categories group rest can plot easier understand. data prepared, last step putting together visualization using ggplot2. can see adjustments required. Let’s closer look “Real estate rental leasing” “Construction” categories. turn categories_for_level function make grabbing sub-categories easier process. observe resulting chart largest contributors GDP sector British Columbia Owner-occupied dwellings (imputed rent) Lessors Real estate (rent), followed Residential building construction.","code":"cut_data <- data %>% filter(   !grepl(\"T\\\\d+\",`Classification Code for North American Industry Classification System (NAICS)`),   `North American Industry Classification System (NAICS)` %in%      categories_for_level(.,\"North American Industry Classification System (NAICS)\",1))  # How many are NAICS categories left?  n <- length(cut_data$`North American Industry Classification System (NAICS)` %>% unique) # Specify which regions and period we want to look at  regions = \"British Columbia\" period = \"2019-07-01\"  # Select the top-8 categories for our reference region and period top_categories <- cut_data %>%    filter(GEO %in% regions, Date == period) %>%    top_n(8,Share) %>%    pull(\"North American Industry Classification System (NAICS)\")  # Group remaining categories together and prepare data for plot plot_data <- cut_data %>%    mutate(NAICS = ifelse(`North American Industry Classification System (NAICS)` %in% top_categories,`North American Industry Classification System (NAICS)`,\"Rest\")) %>%   select(Date, GEO, NAICS, VALUE, Share) %>%   group_by(Date, GEO, NAICS) %>%   summarise(VALUE = sum(VALUE, na.rm = TRUE),             Share = sum(Share, na.rm = TRUE),             .groups = \"drop\") library(ggplot2)  ggplot(plot_data %>%  filter(GEO %in% regions),         aes(x = Date, y = Share, fill = NAICS)) +   geom_area(position=\"stack\") +   scale_y_continuous(labels = scales::percent) +   theme_bw() +   theme(legend.position = \"bottom\",legend.direction =\"vertical\") +   guides(fill=guide_legend(ncol = 3)) +   labs(title=\"Gross domestic product (GDP) at basic prices\",        subtitle=selected_value,        x=\"\", fill = \"\",         caption=paste0(\"CANSIM \", table_id)) real_construction <- c(\"Construction [23]\",\"Real estate and rental and leasing [53]\")  # Get the NAICS hierarchy codes just for these categories rrl_hierarchy <- data %>%    filter(`North American Industry Classification System (NAICS)` %in% real_construction) %>%    pull(\"Hierarchy for North American Industry Classification System (NAICS)\") %>%    unique  # Filter out all sub-categories for Real Estate.  # The paste with | trick ensures that we grepl for all matches.  rrl_data <- data %>%    filter(grepl(paste(rrl_hierarchy,collapse=\"|\"),`Hierarchy for North American Industry Classification System (NAICS)`))  # Ensure we only retain the NAICS leaves and none of the aggregate subcategories rrl_data <- rrl_data %>%    filter(   `North American Industry Classification System (NAICS)` %in%      categories_for_level(.,\"North American Industry Classification System (NAICS)\")) %>%   rename(NAICS=`North American Industry Classification System (NAICS)`)  # Plot with labels from our original selections ggplot(rrl_data %>% filter(GEO %in% regions),        aes(x = Date, y = Share, fill = NAICS)) +   geom_area(position = \"stack\") +   scale_y_continuous(labels = scales::percent) +   theme_bw() +   theme(legend.position = \"bottom\",legend.direction =\"vertical\") +   guides(fill=guide_legend(ncol=1)) +   labs(title=\"Gross domestic product (GDP) at basic prices\",        subtitle=paste0(regions,\", \", selected_value),        x=\"\",        caption=paste0(\"CANSIM \", table_id))"},{"path":"https://mountainmath.github.io/cansim/articles/working_with_large_tables.html","id":"working-with-cached-tables","dir":"Articles","previous_headings":"","what":"Working with cached tables","title":"Working with large tables","text":"data cached function download data first convert specified format. package designed differences database formats mostly abstracted away. make good use data look metadata inspect member columns variables available. gives us understanding available variables. purpose vignette interested breakdown sales units Vehicle type Canada overall. data stored raw form database, processing done augmented GeoUID. parquet feather sqlite get_cansim_table_overview(\"20-10-0001\") #> Reading CANSIM NDM product 20-10-0001 information cache. #> New motor vehicle sales, inactive #> CANSIM Table 20-10-0001 #> Start Reference Period: 1946-01-01, End Reference Period: 2024-12-01, Frequency: Monthly #>  #> Column Geography (11) #> Newfoundland Labrador, Prince Edward Island, Nova Scotia, New Brunswick, Quebec, Ontario, Manitoba, Saskatchewan, Alberta, British Columbia Territories, ... #>  #> Column Vehicle type (3) #> Passenger cars, Trucks, Total, new motor vehicles #>  #> Column Origin manufacture (5) #> North America, Total, overseas, Japan, countries, Total, country manufacture #>  #> Column Sales (2) #> Units, Dollars #>  #> Column Seasonal adjustment (2) #> Unadjusted, Seasonally adjusted","code":"connection.parquet <- get_cansim_connection(\"20-10-0001\") # format='parquet' is the default #> Accessing CANSIM NDM product 20-10-0001 from Statistics Canada #> Parsing data to parquet.  glimpse(connection.parquet) #> FileSystemDataset with 1 Parquet file #> 163,410 rows x 19 columns #> $ REF_DATE                <string> \"1946-01\", \"1946-01\", \"1946-01\", \"1946-01\", \"… #> $ GEO                     <string> \"Canada\", \"Canada\", \"Canada\", \"Canada\", \"Cana… #> $ DGUID                   <string> \"2016A000011124\", \"2016A000011124\", \"2016A000… #> $ `Vehicle type`          <string> \"Total, new motor vehicles\", \"Total, new moto… #> $ `Origin of manufacture` <string> \"Total, country of manufacture\", \"Total, coun… #> $ Sales                   <string> \"Units\", \"Dollars\", \"Units\", \"Units\", \"Dollar… #> $ `Seasonal adjustment`   <string> \"Unadjusted\", \"Unadjusted\", \"Unadjusted\", \"Se… #> $ UOM                     <string> \"Units\", \"Dollars\", \"Units\", \"Units\", \"Dollar… #> $ UOM_ID                  <string> \"300\", \"81\", \"300\", \"300\", \"81\", \"300\", \"300\"… #> $ SCALAR_FACTOR           <string> \"units\", \"thousands\", \"units\", \"units\", \"thou… #> $ SCALAR_ID               <string> \"0\", \"3\", \"0\", \"0\", \"3\", \"0\", \"0\", \"3\", \"0\", … #> $ VECTOR                  <string> \"v42169911\", \"v42169913\", \"v42169920\", \"v4216… #> $ COORDINATE              <string> \"1.1.1.1.1\", \"1.1.1.2.1\", \"1.2.1.1.1\", \"1.2.1… #> $ VALUE                   <double> 2756, 4507, 1102, 1468, 1604, 1654, 2037, 290… #> $ STATUS                  <string> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ SYMBOL                  <string> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ TERMINATED              <string> NA, NA, NA, \"t\", NA, NA, \"t\", NA, NA, NA, NA,… #> $ DECIMALS                <string> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", … #> $ GeoUID                  <string> \"11124\", \"11124\", \"11124\", \"11124\", \"11124\", … #> Call `print()` for full schema details connection.feather <- get_cansim_connection(\"20-10-0001\", format='feather') #> Accessing CANSIM NDM product 20-10-0001 from Statistics Canada #> Parsing data to feather.  glimpse(connection.feather) #> FileSystemDataset with 1 Feather file #> 163,410 rows x 19 columns #> $ REF_DATE                <string> \"1946-01\", \"1946-01\", \"1946-01\", \"1946-01\", \"… #> $ GEO                     <string> \"Canada\", \"Canada\", \"Canada\", \"Canada\", \"Cana… #> $ DGUID                   <string> \"2016A000011124\", \"2016A000011124\", \"2016A000… #> $ `Vehicle type`          <string> \"Total, new motor vehicles\", \"Total, new moto… #> $ `Origin of manufacture` <string> \"Total, country of manufacture\", \"Total, coun… #> $ Sales                   <string> \"Units\", \"Dollars\", \"Units\", \"Units\", \"Dollar… #> $ `Seasonal adjustment`   <string> \"Unadjusted\", \"Unadjusted\", \"Unadjusted\", \"Se… #> $ UOM                     <string> \"Units\", \"Dollars\", \"Units\", \"Units\", \"Dollar… #> $ UOM_ID                  <string> \"300\", \"81\", \"300\", \"300\", \"81\", \"300\", \"300\"… #> $ SCALAR_FACTOR           <string> \"units\", \"thousands\", \"units\", \"units\", \"thou… #> $ SCALAR_ID               <string> \"0\", \"3\", \"0\", \"0\", \"3\", \"0\", \"0\", \"3\", \"0\", … #> $ VECTOR                  <string> \"v42169911\", \"v42169913\", \"v42169920\", \"v4216… #> $ COORDINATE              <string> \"1.1.1.1.1\", \"1.1.1.2.1\", \"1.2.1.1.1\", \"1.2.1… #> $ VALUE                   <double> 2756, 4507, 1102, 1468, 1604, 1654, 2037, 290… #> $ STATUS                  <string> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ SYMBOL                  <string> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ TERMINATED              <string> NA, NA, NA, \"t\", NA, NA, \"t\", NA, NA, NA, NA,… #> $ DECIMALS                <string> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", … #> $ GeoUID                  <string> \"11124\", \"11124\", \"11124\", \"11124\", \"11124\", … #> Call `print()` for full schema details connection.sqlite <- get_cansim_connection(\"20-10-0001\", format='sqlite') #> Accessing CANSIM NDM product 20-10-0001 from Statistics Canada #> Parsing data to sqlite. #> Indexing GEO #> Indexing Vehicle type #> Indexing Origin of manufacture #> Indexing Sales #> Indexing Seasonal adjustment #> Indexing REF_DATE #> Indexing DGUID #> Indexing GeoUID  glimpse(connection.sqlite) #> Rows: ?? #> Columns: 19 #> Database: sqlite 3.50.1 [/Users/jens/data/cansim.data/cansim_20100001_sqlite_eng/20100001-eng.sqlite] #> $ REF_DATE                <chr> \"1946-01\", \"1946-01\", \"1946-01\", \"1946-01\", \"1… #> $ GEO                     <chr> \"Canada\", \"Canada\", \"Canada\", \"Canada\", \"Canad… #> $ GeoUID                  <chr> \"11124\", \"11124\", \"11124\", \"11124\", \"11124\", \"… #> $ DGUID                   <chr> \"2016A000011124\", \"2016A000011124\", \"2016A0000… #> $ `Vehicle type`          <chr> \"Total, new motor vehicles\", \"Total, new motor… #> $ `Origin of manufacture` <chr> \"Total, country of manufacture\", \"Total, count… #> $ Sales                   <chr> \"Units\", \"Dollars\", \"Units\", \"Units\", \"Dollars… #> $ `Seasonal adjustment`   <chr> \"Unadjusted\", \"Unadjusted\", \"Unadjusted\", \"Sea… #> $ UOM                     <chr> \"Units\", \"Dollars\", \"Units\", \"Units\", \"Dollars… #> $ UOM_ID                  <chr> \"300\", \"81\", \"300\", \"300\", \"81\", \"300\", \"300\",… #> $ SCALAR_FACTOR           <chr> \"units\", \"thousands\", \"units\", \"units\", \"thous… #> $ SCALAR_ID               <chr> \"0\", \"3\", \"0\", \"0\", \"3\", \"0\", \"0\", \"3\", \"0\", \"… #> $ VECTOR                  <chr> \"v42169911\", \"v42169913\", \"v42169920\", \"v42169… #> $ COORDINATE              <chr> \"1.1.1.1.1\", \"1.1.1.2.1\", \"1.2.1.1.1\", \"1.2.1.… #> $ VALUE                   <dbl> 2756, 4507, 1102, 1468, 1604, 1654, 2037, 2903… #> $ STATUS                  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ SYMBOL                  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ TERMINATED              <chr> NA, NA, NA, \"t\", NA, NA, \"t\", NA, NA, NA, NA, … #> $ DECIMALS                <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"…"},{"path":"https://mountainmath.github.io/cansim/articles/working_with_large_tables.html","id":"filtering-and-loading-into-memory","dir":"Articles","previous_headings":"","what":"Filtering and loading into memory","title":"Working with large tables","text":"order work data need load memory, done calling collect() connection object. want make use additional metadata processing cansim package usually main operations done connection filtering (renaming de-selecting columns needed enriching metadata) can utilize custom collect_and_normalize function time normalize data appear way used get_cansim function. add category hierarchy metadata normalized value column. case sqlite connections might want pass disconnect = TRUE argument collect_and_normalize function close connection normalizing data, manually later time via disconnect_cansim_sqlite(connection). required parquet feather connections. collect_and_normalize() interface designed used way across database formats. comparison also add “traditional” get_cansim() approach reads entire table memory normalizes data. parquet feather sqlite traditional","code":"data.parquet <- connection.parquet %>%   filter(GEO==\"Canada\",          `Seasonal adjustment`==\"Unadjusted\",          Sales==\"Units\",          `Origin of manufacture`==\"Total, country of manufacture\",          `Vehicle type` %in% c(\"Passenger cars\",\"Trucks\")) %>%   collect_and_normalize()  data.parquet %>% head() #> # A tibble: 6 × 30 #>   REF_DATE Date       GEO    DGUID  GeoUID `Vehicle type` Origin of manufactur…¹ #>   <chr>    <date>     <fct>  <chr>  <chr>  <fct>          <fct>                  #> 1 1975-11  1975-11-01 Canada 2016A… 11124  Passenger cars Total, country of man… #> 2 1975-11  1975-11-01 Canada 2016A… 11124  Trucks         Total, country of man… #> 3 1975-12  1975-12-01 Canada 2016A… 11124  Passenger cars Total, country of man… #> 4 1975-12  1975-12-01 Canada 2016A… 11124  Trucks         Total, country of man… #> 5 1976-01  1976-01-01 Canada 2016A… 11124  Passenger cars Total, country of man… #> 6 1976-01  1976-01-01 Canada 2016A… 11124  Trucks         Total, country of man… #> # ℹ abbreviated name: ¹​`Origin of manufacture` #> # ℹ 23 more variables: Sales <fct>, `Seasonal adjustment` <fct>, VALUE <dbl>, #> #   val_norm <dbl>, UOM <chr>, UOM_ID <chr>, SCALAR_FACTOR <chr>, #> #   SCALAR_ID <chr>, VECTOR <chr>, COORDINATE <chr>, STATUS <chr>, #> #   SYMBOL <chr>, TERMINATED <chr>, DECIMALS <chr>, `Hierarchy for GEO` <chr>, #> #   `Classification Code for Vehicle type` <chr>, #> #   `Hierarchy for Vehicle type` <chr>, … data.feather <- connection.feather %>%   filter(GEO==\"Canada\",          `Seasonal adjustment`==\"Unadjusted\",          Sales==\"Units\",          `Origin of manufacture`==\"Total, country of manufacture\",          `Vehicle type` %in% c(\"Passenger cars\",\"Trucks\")) %>%   collect_and_normalize()  data.feather %>% head() #> # A tibble: 6 × 30 #>   REF_DATE Date       GEO    DGUID  GeoUID `Vehicle type` Origin of manufactur…¹ #>   <chr>    <date>     <fct>  <chr>  <chr>  <fct>          <fct>                  #> 1 1970-03  1970-03-01 Canada 2016A… 11124  Passenger cars Total, country of man… #> 2 1970-03  1970-03-01 Canada 2016A… 11124  Trucks         Total, country of man… #> 3 1970-04  1970-04-01 Canada 2016A… 11124  Passenger cars Total, country of man… #> 4 1970-04  1970-04-01 Canada 2016A… 11124  Trucks         Total, country of man… #> 5 1970-05  1970-05-01 Canada 2016A… 11124  Passenger cars Total, country of man… #> 6 1970-05  1970-05-01 Canada 2016A… 11124  Trucks         Total, country of man… #> # ℹ abbreviated name: ¹​`Origin of manufacture` #> # ℹ 23 more variables: Sales <fct>, `Seasonal adjustment` <fct>, VALUE <dbl>, #> #   val_norm <dbl>, UOM <chr>, UOM_ID <chr>, SCALAR_FACTOR <chr>, #> #   SCALAR_ID <chr>, VECTOR <chr>, COORDINATE <chr>, STATUS <chr>, #> #   SYMBOL <chr>, TERMINATED <chr>, DECIMALS <chr>, `Hierarchy for GEO` <chr>, #> #   `Classification Code for Vehicle type` <chr>, #> #   `Hierarchy for Vehicle type` <chr>, … data.sqlite <- connection.sqlite %>%   filter(GEO==\"Canada\",          `Seasonal adjustment`==\"Unadjusted\",          Sales==\"Units\",          `Origin of manufacture`==\"Total, country of manufacture\",          `Vehicle type` %in% c(\"Passenger cars\",\"Trucks\")) %>%   collect_and_normalize()  data.sqlite %>% head() #> # A tibble: 6 × 30 #>   REF_DATE Date       GEO    DGUID  GeoUID `Vehicle type` Origin of manufactur…¹ #>   <chr>    <date>     <fct>  <chr>  <chr>  <fct>          <fct>                  #> 1 1946-01  1946-01-01 Canada 2016A… 11124  Passenger cars Total, country of man… #> 2 1946-01  1946-01-01 Canada 2016A… 11124  Trucks         Total, country of man… #> 3 1946-02  1946-02-01 Canada 2016A… 11124  Passenger cars Total, country of man… #> 4 1946-02  1946-02-01 Canada 2016A… 11124  Trucks         Total, country of man… #> 5 1946-03  1946-03-01 Canada 2016A… 11124  Passenger cars Total, country of man… #> 6 1946-03  1946-03-01 Canada 2016A… 11124  Trucks         Total, country of man… #> # ℹ abbreviated name: ¹​`Origin of manufacture` #> # ℹ 23 more variables: Sales <fct>, `Seasonal adjustment` <fct>, VALUE <dbl>, #> #   val_norm <dbl>, UOM <chr>, UOM_ID <chr>, SCALAR_FACTOR <chr>, #> #   SCALAR_ID <chr>, VECTOR <chr>, COORDINATE <chr>, STATUS <chr>, #> #   SYMBOL <chr>, TERMINATED <chr>, DECIMALS <chr>, `Hierarchy for GEO` <chr>, #> #   `Classification Code for Vehicle type` <chr>, #> #   `Hierarchy for Vehicle type` <chr>, … data.memory <- get_cansim(\"20-10-0001\") %>%   filter(GEO==\"Canada\",          `Seasonal adjustment`==\"Unadjusted\",          Sales==\"Units\",          `Origin of manufacture`==\"Total, country of manufacture\",          `Vehicle type` %in% c(\"Passenger cars\",\"Trucks\"))  #> Accessing CANSIM NDM product 20-10-0001 from Statistics Canada #> Parsing data  data.memory %>% head() #> # A tibble: 6 × 30 #>   REF_DATE Date       GEO    DGUID  GeoUID `Vehicle type` Origin of manufactur…¹ #>   <chr>    <date>     <fct>  <chr>  <chr>  <fct>          <fct>                  #> 1 1946-01  1946-01-01 Canada 2016A… 11124  Passenger cars Total, country of man… #> 2 1946-01  1946-01-01 Canada 2016A… 11124  Trucks         Total, country of man… #> 3 1946-02  1946-02-01 Canada 2016A… 11124  Passenger cars Total, country of man… #> 4 1946-02  1946-02-01 Canada 2016A… 11124  Trucks         Total, country of man… #> 5 1946-03  1946-03-01 Canada 2016A… 11124  Passenger cars Total, country of man… #> 6 1946-03  1946-03-01 Canada 2016A… 11124  Trucks         Total, country of man… #> # ℹ abbreviated name: ¹​`Origin of manufacture` #> # ℹ 23 more variables: Sales <fct>, `Seasonal adjustment` <fct>, VALUE <dbl>, #> #   val_norm <dbl>, UOM <chr>, UOM_ID <chr>, SCALAR_FACTOR <chr>, #> #   SCALAR_ID <chr>, VECTOR <chr>, COORDINATE <chr>, STATUS <chr>, #> #   SYMBOL <chr>, TERMINATED <chr>, DECIMALS <chr>, `Hierarchy for GEO` <chr>, #> #   `Classification Code for Vehicle type` <chr>, #> #   `Hierarchy for Vehicle type` <chr>, …"},{"path":"https://mountainmath.github.io/cansim/articles/working_with_large_tables.html","id":"section","dir":"Articles","previous_headings":"","what":"Working with large tables","title":"Working with large tables","text":"note syntax, resulting data frames, identical.","code":""},{"path":"https://mountainmath.github.io/cansim/articles/working_with_large_tables.html","id":"working-with-the-data","dir":"Articles","previous_headings":"","what":"Working with the data","title":"Working with large tables","text":"three data formats producing output can now work data fetched subsequently filtered via get_cansim. Given data can filter date range plot .","code":"data.parquet %>%   filter(Date>=as.Date(\"1990-01-01\")) %>%   ggplot(aes(x=Date,y=val_norm,color=`Vehicle type`)) +   geom_smooth(span=0.2,method = 'loess', formula = y ~ x) +   theme(legend.position=\"bottom\") +   scale_y_continuous(labels = function(d)scales::comma(d,scale=10^-3,suffix=\"k\")) +   labs(title=\"Canada new motor vehicle sales\",caption=\"StatCan Table 20-10-0001\",        x=NULL,y=\"Number of units\")"},{"path":"https://mountainmath.github.io/cansim/articles/working_with_large_tables.html","id":"partitioning","dir":"Articles","previous_headings":"","what":"Partitioning","title":"Working with large tables","text":"improve read performance parquet feather data one can specify partioning argument calling get_cansim_connection. partition data specified columns. can useful filtering columns read relevant partitions greatly increase read performance sight cost size disk. example dataset mostly accessed filtering geographic regions, might useful partition GeoUID, GEO column querying data name. one partitioning column can specified, helpful large datasets high number dimensions. parquet dataset partitioned subsequent queries mind often faster data retrieval index SQLite database. arrow package guidance partitioning tradeoffs.","code":""},{"path":"https://mountainmath.github.io/cansim/articles/working_with_large_tables.html","id":"repartitioning","dir":"Articles","previous_headings":"Partitioning Working with cached tables","what":"Repartitioning","title":"Working with large tables","text":"Partitioning happens initial data import changing partitioning parameter subsequent calls get_cansim_connection() won’t effect, although warning get issued specified partitioning empty differs initial partitioning. cases, example lots data queries dataset, might make sense occasionally change partitioning data order optimize read performance. can done cansim_repartition_cached_table() takes new_partitioning argument. Repartitioning happens fairly fast, taking several seconds fairly large tables original CSV several gigabytes size.","code":""},{"path":"https://mountainmath.github.io/cansim/articles/working_with_large_tables.html","id":"keeping-track-of-cached-data","dir":"Articles","previous_headings":"","what":"Keeping track of cached data","title":"Working with large tables","text":"Since now option permanent cache take care manage space properly. list_cansim_sqlite_cached_tables function gives us overview cached data .","code":"list_cansim_cached_tables() #> # A tibble: 60 × 10 #>    cansimTableNumber language dataFormat timeCached          niceSize  rawSize #>    <chr>             <chr>    <chr>      <dttm>              <chr>       <dbl> #>  1 11-10-0004        eng      parquet    2025-07-18 22:22:12 1.8 Mb    1884578 #>  2 11-10-0008        eng      parquet    2025-07-18 23:12:15 14.4 Mb  15047191 #>  3 11-10-0009        eng      parquet    2025-07-18 22:06:31 2 Mb      2125776 #>  4 11-10-0009        eng      sqlite     1900-01-01 01:00:00 NA             NA #>  5 11-10-0017        eng      parquet    2025-02-11 11:49:21 9.3 Mb    9767494 #>  6 11-10-0047        eng      parquet    2025-07-15 14:44:05 918 Kb     940072 #>  7 11-10-0191        eng      parquet    2025-05-01 13:48:11 12.5 Mb  13142229 #>  8 11-10-0223        eng      parquet    2025-05-21 13:12:41 4.2 Mb    4404277 #>  9 11-10-0239        eng      parquet    2025-07-18 22:30:23 27.7 Mb  29072464 #> 10 13-10-0418        eng      parquet    2025-06-22 15:37:38 18.9 Kb     19367 #> # ℹ 50 more rows #> # ℹ 4 more variables: title <chr>, path <chr>, timeReleased <dttm>, #> #   upToDate <lgl>"},{"path":"https://mountainmath.github.io/cansim/articles/working_with_large_tables.html","id":"removing-cached-data","dir":"Articles","previous_headings":"","what":"Removing cached data","title":"Working with large tables","text":"want free disk space can remove cached table several tables. following call remove cached “20-10-0001” tables formats languages. disconnect connection sqlite database.","code":"disconnect_cansim_sqlite(connection.sqlite) remove_cansim_cached_tables(\"20-10-0001\") #> Removing feather cached data for 20-10-0001 (eng) #> Removing parquet cached data for 20-10-0001 (eng) #> Removing sqlite cached data for 20-10-0001 (eng)"},{"path":"https://mountainmath.github.io/cansim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jens von Bergmann. Author, maintainer. Dmitry Shkolnik. Author.","code":""},{"path":"https://mountainmath.github.io/cansim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"von Bergmann Shkolnik (2021). cansim: Accessing Statistics Canada Data Table Vectors. https://CRAN.R-project.org/package=cansim","code":"@Manual{,   year = {2021},   author = {Jens {von Bergmann} and Dmitry Shkolnik},   title = {cansim: Accessing Statistics Canada Data Table and Vectors},   url = {https://CRAN.R-project.org/package=cansim}, }"},{"path":"https://mountainmath.github.io/cansim/index.html","id":"cansim","dir":"","previous_headings":"","what":"Retrieve and work with public Statistics Canada data tables in R","title":"Retrieve and work with public Statistics Canada data tables in R","text":"R package retrieve work public Statistics Canada data tables. package: Searches retrieves data tables series Statistics Canada’s socioeconomic data repository (previously known CANSIM) Prepares retrieved data tables analysis-ready tidy data frames Accepts legacy CANSIM table catalogue numbers Allows bilingual data retrieval Offers caching downloaded data faster loading less waiting Includes convenience functions relabelling rescaling well tools working data hierarchies downloaded table objects","code":""},{"path":"https://mountainmath.github.io/cansim/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Retrieve and work with public Statistics Canada data tables in R","text":"Cansim R package home page reference guide","code":""},{"path":"https://mountainmath.github.io/cansim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Retrieve and work with public Statistics Canada data tables in R","text":"cansim package available CRAN can installed directly. Alternatively, latest development version can downloaded Github using either remotes devtools packages.","code":"install.packages(\"cansim\") # install.packages(\"remotes\") remotes::install_github(\"mountainmath/cansim\")"},{"path":"https://mountainmath.github.io/cansim/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic Usage","title":"Retrieve and work with public Statistics Canada data tables in R","text":"package accepts use old-format (“051-0013”) new-format (“17-10-0016-01”) table catalogue numbers download entire data tables tidy data frames. Calling either legacy CANSIM table number new NDM number load data. Since transition new data repository, existing tables retained old-format numbers, newly created tables new-format names. See example usage workflow Getting started cansim package vignette.","code":"# Retrieve data for births table: 17-10-0016-01 (formerly: CANSIM 051-0013) births <- get_cansim(\"051-0013\") births <- get_cansim(\"17-10-0016\")  # Retrieve data for balance of payment table 36-10-0042-01 (formerly CANSIM  376-8105) bop <- get_cansim(\"3768105\") bop <- get_cansim(\"36-10-0042\")"},{"path":"https://mountainmath.github.io/cansim/index.html","id":"caching","dir":"","previous_headings":"","what":"Caching","title":"Retrieve and work with public Statistics Canada data tables in R","text":"Many data tables available Statistics Canada’s data repository quite large size. downloading tables, cansim package cache data temporary directory duration current R session. reduces unnecessary waiting recompiling code. force refresh data, pass refresh=TRUE option function call. cache data sessions get_cansim_connection() function retrieves caches data local database returns database connection. allows database level filtering, data manipulation, summarizing calling collect_and_normalize() retrieve data data frame. Data retrieved way identical data retrieved via get_cansim(), possibly row order. call give identical output get_cansim(\"17-10-0016\"), commonly filter otherwise manipulate data calling collect_and_normalize() load data memory. example, filter data include births Canada overall irrespective gender use following code: One difference just calling get_cansim() data cached sessions ‘CANSIM_CACHE_PATH’ environment variable set. Typically set .Renviron file home directory share cache sessions projects. set_cansim_cache_path() function can used set cache path environment variable optionally install permanently .Renviron file. function emit warning package query cached newer version available StatCan. Setting refresh = \"auto\" argument automatically refresh data newer version available, setting refresh = TRUE forces refresh irrespective cached data date . approach especially useful working large tables, see example usage workflow Working large tables vignette.","code":"births <- get_cansim_connection(\"17-10-0016\") |>   collect_and_normalize() births <- get_cansim_connection(\"17-10-0016\") |>   dplyr::filter(GEO == \"Canada\",                 Gender == \"Total - gender\") |>   collect_and_normalize()"},{"path":"https://mountainmath.github.io/cansim/index.html","id":"bilingual","dir":"","previous_headings":"","what":"Bilingual","title":"Retrieve and work with public Statistics Canada data tables in R","text":"Statistics Canada data tables provided either English French formats, including labels formats. cansim package allows download tables either English French. optional language argument retrieve tables French: Le paquet cansim fonctionne en anglais ou en français. Il existe un argument de langue optionnel pour récupérer les tables en français:","code":"naissances <- get_cansim(\"051-0013\",language=\"fr\")"},{"path":"https://mountainmath.github.io/cansim/index.html","id":"normalizing-values","dir":"","previous_headings":"","what":"Normalizing values","title":"Retrieve and work with public Statistics Canada data tables in R","text":"package also scales variables reported thousands millions. Statistics Canada data table values may scaled powers 10. example, values VALUE field may reported “millions”, VALUE 10 means 10,000,000. default cansim package adds val_norm column scaled values, get value val_norm VALUE column converted 10 10,000,000 example given. Similarly, percentages converted rates, instead 0-100 normalized 0-1 val_norm column.","code":""},{"path":"https://mountainmath.github.io/cansim/index.html","id":"vectors","dir":"","previous_headings":"","what":"Vectors","title":"Retrieve and work with public Statistics Canada data tables in R","text":"Many time-series data available Statistics Canada individual vector codes users Canadian statistical data, often concerned specific time series CPI international arrivals, typically know exact series need. , example, tracking Canadian Consumer Price Index (CPI) time, might already know Statistics Canada vector code seasonally-unadjusted -items CPI value: v41690973. retrieve just data series without additional data available related tables, can use get_cansim_vector() function vector code date onward want get vector results . access metadata vectors, use detailed usage examples available Retrieving individual Statistics Canada vectors vignette.","code":"get_cansim_vector(\"v41690973\",\"2015-01-01\") get_cansim_vector_info(\"v41690973\")"},{"path":"https://mountainmath.github.io/cansim/index.html","id":"table-overview-metadata","dir":"","previous_headings":"","what":"Table overview metadata","title":"Retrieve and work with public Statistics Canada data tables in R","text":"get_cansim_table_overview function displays overview table information. table yet downloaded cached first download table . Let’s take look ’s table interested .","code":"get_cansim_table_overview(\"36-10-040\")"},{"path":"https://mountainmath.github.io/cansim/index.html","id":"listing-available-tables","dir":"","previous_headings":"","what":"Listing available tables","title":"Retrieve and work with public Statistics Canada data tables in R","text":"Calling list_cansim_cubes returns data frame useful metadata available tables. 21 fields metadata table including title, English French, keyword sets, notes, table numbers. appropriate table can found subsetting filtering properties want use find appropriate tables. work well standard dplyr verbs. Retrieving table list takes little bit time, results cached duration session. sessions span several days refresh=TRUE argument can passed regenerate list capture newly published tables. Listing Statistics Canada data tables vignette additional detail examples.","code":"list_cansim_cubes() list_cansim_cubes() %>%    filter(grepl(\"Labour force characteristics\",cubeTitleEn), grepl(\"economic region\",cubeTitleEn)) %>%    select(\"cansim_table_number\",\"cubeTitleEn\")"},{"path":"https://mountainmath.github.io/cansim/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Retrieve and work with public Statistics Canada data tables in R","text":"code package licensed MIT license. Statistics Canada data retrieved using package made available Statistics Canada Open Licence Agreement, copy included inst folder. Statistics Canada Open Licence Agreement requires :","code":"Subject to this agreement, Statistics Canada grants you a worldwide, royalty-free, non-exclusive licence to:    - use, reproduce, publish, freely distribute, or sell the Information;   - use, reproduce, publish, freely distribute, or sell Value-added Products; and,   - sublicence any or all such rights, under terms consistent with this agreement.  In doing any of the above, you shall:    - reproduce the Information accurately;   - not use the Information in a way that suggests that Statistics Canada endorses you or your use of the Information;   - not misrepresent the Information or its source;   - use the Information in a manner that does not breach or infringe any applicable laws;   - not merge or link the Information with any other databases for the purpose of attempting to identify an individual person, business or organization; and   - not present the Information in such a manner that gives the appearance that you may have received, or had access to, information held by Statistics Canada about any identifiable individual person, business or organization."},{"path":"https://mountainmath.github.io/cansim/index.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Retrieve and work with public Statistics Canada data tables in R","text":"Subject Statistics Canada Open Licence Agreement, licensed products using Statistics Canada data employ following acknowledgement source:","code":"Acknowledgment of Source  (a) You shall include and maintain the following notice on all licensed rights of the Information:    - Source: Statistics Canada, name of product, reference date. Reproduced and distributed on an \"as is\" basis with the permission of Statistics Canada.  (b) Where any Information is contained within a Value-added Product, you shall include on such Value-added Product the following notice:    - Adapted from Statistics Canada, name of product, reference date. This does not constitute an endorsement by Statistics Canada of this product."},{"path":"https://mountainmath.github.io/cansim/index.html","id":"why-cansim","dir":"","previous_headings":"","what":"Why cansim?","title":"Retrieve and work with public Statistics Canada data tables in R","text":"CANSIM name Statistics Canada’s legacy socio-economic data repository widely used practitioners, academics, students, many still calling new repository name. Statistics Canada refers current repository simply “Statistics Canada data” “StatCan data”. use CANSIM name package nostalgic reference.","code":""},{"path":"https://mountainmath.github.io/cansim/index.html","id":"proxy-issues","dir":"","previous_headings":"","what":"Proxy issues","title":"Retrieve and work with public Statistics Canada data tables in R","text":"users reported issues accessing downloading Statistics Canada tables behind proxy sometimes case office environments. quick fix requires specifying proxy configuration httr package.","code":"httr::set_config(use_proxy(url=http_proxy, port=selected_port, username=your_username,password=your_pass))"},{"path":"https://mountainmath.github.io/cansim/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Retrieve and work with public Statistics Canada data tables in R","text":"Issues pull requests highly appreciated. want get touch, pretty good responding via email via twitter @dshkol @vb_jens.","code":""},{"path":"https://mountainmath.github.io/cansim/index.html","id":"related-packages","dir":"","previous_headings":"","what":"Related packages","title":"Retrieve and work with public Statistics Canada data tables in R","text":"statcanR package alternative package providing basic access StatCan NDM tables data discovery. cancensus package designed access, retrieve, work Canadian Census data geography. cansim package designed work conjunction cancensus data can easily joined standard geographic identifiers exposed harmonized packages. cmhc package designed access, retrieve, work CMHC data.","code":""},{"path":"https://mountainmath.github.io/cansim/index.html","id":"cite-cansim","dir":"","previous_headings":"","what":"Cite cansim","title":"Retrieve and work with public Statistics Canada data tables in R","text":"wish cite cansim package work: von Bergmann, J., Dmitry Shkolnik (2024). cansim: functions convenience tools accessing Statistics Canada data tables. v0.4.4. DOI: 10.32614/CRAN.package.cansim BibTeX entry LaTeX users ","code":"@Manual{cansim,     author = {Jens {von Bergmann} and Dmitry Shkolnik},     title = {cansim: functions and convenience tools for accessing Statistics Canada data tables},     year = {2025},     doi = {10.32614/CRAN.package.cansim},     note = {R package version 0.4.4},     url = {https://mountainmath.github.io/cansim/}   }"},{"path":"https://mountainmath.github.io/cansim/reference/add_cansim_vectors_to_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve series info for given table id and coordinates — add_cansim_vectors_to_template","title":"Retrieve series info for given table id and coordinates — add_cansim_vectors_to_template","text":"Retrieves vector information given table coordinates. can used query data vectors, returns vector information coordinates present data table, gives effective way filter coordinates. Vector information available census data tables.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/add_cansim_vectors_to_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve series info for given table id and coordinates — add_cansim_vectors_to_template","text":"","code":"add_cansim_vectors_to_template(template, refresh = FALSE)"},{"path":"https://mountainmath.github.io/cansim/reference/add_cansim_vectors_to_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve series info for given table id and coordinates — add_cansim_vectors_to_template","text":"template (possibly filtered) cansim table template returned `get_cansim_table_template` refresh Refresh data Statistics Canada API","code":""},{"path":"https://mountainmath.github.io/cansim/reference/add_cansim_vectors_to_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve series info for given table id and coordinates — add_cansim_vectors_to_template","text":"tibble containing table template added vector information","code":""},{"path":"https://mountainmath.github.io/cansim/reference/add_cansim_vectors_to_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve series info for given table id and coordinates — add_cansim_vectors_to_template","text":"","code":"if (FALSE) { # \\dontrun{ template <- get_cansim_table_template(\"34-10-0013\") template |>   filter(Geography==\"Canada\") |>   add_cansim_vectors_to_template() } # }"},{"path":"https://mountainmath.github.io/cansim/reference/add_provincial_abbreviations.html","id":null,"dir":"Reference","previous_headings":"","what":"Add provincial abbreviations as factor — add_provincial_abbreviations","title":"Add provincial abbreviations as factor — add_provincial_abbreviations","text":"Add provincial abbreviations factor","code":""},{"path":"https://mountainmath.github.io/cansim/reference/add_provincial_abbreviations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add provincial abbreviations as factor — add_provincial_abbreviations","text":"","code":"add_provincial_abbreviations(data)"},{"path":"https://mountainmath.github.io/cansim/reference/add_provincial_abbreviations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add provincial abbreviations as factor — add_provincial_abbreviations","text":"data tibble returned get_cansim provincial level data","code":""},{"path":"https://mountainmath.github.io/cansim/reference/add_provincial_abbreviations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add provincial abbreviations as factor — add_provincial_abbreviations","text":"input tibble additional factor GEO.abb contains language-specific provincial abbreviations","code":""},{"path":"https://mountainmath.github.io/cansim/reference/add_provincial_abbreviations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add provincial abbreviations as factor — add_provincial_abbreviations","text":"","code":"if (FALSE) { # \\dontrun{ df <- get_cansim(\"17-10-0005\") df <- add_provincial_abbreviations(df) } # }"},{"path":"https://mountainmath.github.io/cansim/reference/cansim_old_to_new.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate deprecated CANSIM table number into new NDM-format table catalogue number — cansim_old_to_new","title":"Translate deprecated CANSIM table number into new NDM-format table catalogue number — cansim_old_to_new","text":"Returns NDM table catalogue equivalent given standard old-format CANSIM table number","code":""},{"path":"https://mountainmath.github.io/cansim/reference/cansim_old_to_new.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate deprecated CANSIM table number into new NDM-format table catalogue number — cansim_old_to_new","text":"","code":"cansim_old_to_new(oldCansimTableNumber)"},{"path":"https://mountainmath.github.io/cansim/reference/cansim_old_to_new.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate deprecated CANSIM table number into new NDM-format table catalogue number — cansim_old_to_new","text":"oldCansimTableNumber deprecated style CANSIM table number (e.g. \"427-0001\")","code":""},{"path":"https://mountainmath.github.io/cansim/reference/cansim_old_to_new.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate deprecated CANSIM table number into new NDM-format table catalogue number — cansim_old_to_new","text":"character string new-format NDM table number","code":""},{"path":"https://mountainmath.github.io/cansim/reference/cansim_old_to_new.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate deprecated CANSIM table number into new NDM-format table catalogue number — cansim_old_to_new","text":"","code":"if (FALSE) { # \\dontrun{ cansim_old_to_new(\"026-0018\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/cansim_repartition_cached_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Repartitions a cached cansim table to a new partitioning scheme — cansim_repartition_cached_table","title":"Repartitions a cached cansim table to a new partitioning scheme — cansim_repartition_cached_table","text":"Repartitions already downloaded cached parquet feather dataset","code":""},{"path":"https://mountainmath.github.io/cansim/reference/cansim_repartition_cached_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repartitions a cached cansim table to a new partitioning scheme — cansim_repartition_cached_table","text":"","code":"cansim_repartition_cached_table(   cansimTableNumber,   new_partitioning = c(),   language = \"english\",   format = \"parquet\",   cache_path = Sys.getenv(\"CANSIM_CACHE_PATH\") )"},{"path":"https://mountainmath.github.io/cansim/reference/cansim_repartition_cached_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repartitions a cached cansim table to a new partitioning scheme — cansim_repartition_cached_table","text":"cansimTableNumber NDM table number load new_partitioning (Optional) Partition columns use parquet feather formats. language \"en\" \"english\" English \"fr\" \"french\" French language versions (defaults English) format (Optional) format data table retrieve. Either \"parquet\", \"feather\", sqlite (default \"parquet\"). cache_path (Optional) Path cache table permanently. default, data cached path specified `Sys.getenv(\"CANSIM_CACHE_PATH\")`, set. Otherwise use `tempdir()`.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/cansim_repartition_cached_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repartitions a cached cansim table to a new partitioning scheme — cansim_repartition_cached_table","text":"","code":"if (FALSE) { # \\dontrun{ cansim_repartition_cached_table(\"34-10-0013\",new_partitioning=c(\"GeoUID\"))  } # }"},{"path":"https://mountainmath.github.io/cansim/reference/categories_for_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Use metadata to extract categories for column of specific level — categories_for_level","title":"Use metadata to extract categories for column of specific level — categories_for_level","text":"tables data hierarchical categories, metadata containing hierarchy level descriptions used extract categories specified level hierarchy .","code":""},{"path":"https://mountainmath.github.io/cansim/reference/categories_for_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use metadata to extract categories for column of specific level — categories_for_level","text":"","code":"categories_for_level(   data,   column_name,   level = NA,   strict = FALSE,   remove_duplicates = TRUE )"},{"path":"https://mountainmath.github.io/cansim/reference/categories_for_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use metadata to extract categories for column of specific level — categories_for_level","text":"data data table object returned get_cansim() column_name quoted name column extract categories level hierarchy level depth extract categories, 0 top category strict (default FALSE) TRUE extract specific hierarchy level remove_duplicates (default TRUE) set TRUE higher level grouping categories already captured lower level hierarchy data removed","code":""},{"path":"https://mountainmath.github.io/cansim/reference/categories_for_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use metadata to extract categories for column of specific level — categories_for_level","text":"vector categories","code":""},{"path":"https://mountainmath.github.io/cansim/reference/categories_for_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use metadata to extract categories for column of specific level — categories_for_level","text":"","code":"if (FALSE) { # \\dontrun{ data <- get_cansim(\"16-10-0117\") categories_for_level(data,\"North American Industry Classification System (NAICS)\",level=2) } # }"},{"path":"https://mountainmath.github.io/cansim/reference/collect_and_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect data from a parquet, feather or sqlite query and normalize cansim table output — collect_and_normalize","title":"Collect data from a parquet, feather or sqlite query and normalize cansim table output — collect_and_normalize","text":"Collect data parquet, feather sqlite query normalize cansim table output","code":""},{"path":"https://mountainmath.github.io/cansim/reference/collect_and_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect data from a parquet, feather or sqlite query and normalize cansim table output — collect_and_normalize","text":"","code":"collect_and_normalize(   connection,   replacement_value = \"val_norm\",   normalize_percent = TRUE,   default_month = \"07\",   default_day = \"01\",   factors = TRUE,   strip_classification_code = FALSE,   disconnect = FALSE )"},{"path":"https://mountainmath.github.io/cansim/reference/collect_and_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect data from a parquet, feather or sqlite query and normalize cansim table output — collect_and_normalize","text":"connection connection local arrow connection returned get_cansim_connection, possibly filters dplyr verbs applied replacement_value (Optional) name column manipulated value returned . Defaults adding `val_norm` value field. normalize_percent (Optional) true (default) normalizes percentages changing rates default_month default month used creating Date objects annual data (default set \"07\") default_day default day month used creating Date objects monthly data (default set \"01\") factors (Optional) Logical value indicating dimensions converted factors. (Default set FALSE). strip_classification_code (Optional) Logical value indicating classification code stripped names. (Default set false). disconnect (Optional) used format sqlite. Logical value indicate SQLite database connection disconnected. (Default FALSE)","code":""},{"path":"https://mountainmath.github.io/cansim/reference/collect_and_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect data from a parquet, feather or sqlite query and normalize cansim table output — collect_and_normalize","text":"tibble collected normalized data","code":""},{"path":"https://mountainmath.github.io/cansim/reference/collect_and_normalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect data from a parquet, feather or sqlite query and normalize cansim table output — collect_and_normalize","text":"","code":"if (FALSE) { # \\dontrun{ library(dplyr)  con <- get_cansim_connection(\"34-10-0013\") data <- con %>%   filter(GEO==\"Ontario\") %>%   collect_and_normalize()  } # }"},{"path":"https://mountainmath.github.io/cansim/reference/correspondence.html","id":null,"dir":"Reference","previous_headings":"","what":"The correspondence file for old to new StatCan table numbers is included in the package — correspondence","title":"The correspondence file for old to new StatCan table numbers is included in the package — correspondence","text":"correspondence file old new StatCan table numbers included package","code":""},{"path":"https://mountainmath.github.io/cansim/reference/correspondence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The correspondence file for old to new StatCan table numbers is included in the package — correspondence","text":"https://www.statcan.gc.ca/eng/developers-developpeurs/cansim_id-product_id-concordance.csv","code":""},{"path":"https://mountainmath.github.io/cansim/reference/correspondence.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The correspondence file for old to new StatCan table numbers is included in the package — correspondence","text":"Statistics Canada","code":""},{"path":"https://mountainmath.github.io/cansim/reference/create_index.html","id":null,"dir":"Reference","previous_headings":"","what":"create database index — create_index","title":"create database index — create_index","text":"create database index","code":""},{"path":"https://mountainmath.github.io/cansim/reference/create_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create database index — create_index","text":"","code":"create_index(connection, table_name, field)"},{"path":"https://mountainmath.github.io/cansim/reference/create_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create database index — create_index","text":"connection connection database table_name sql table name field name field index","code":""},{"path":"https://mountainmath.github.io/cansim/reference/create_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create database index — create_index","text":"`NULL“","code":""},{"path":"https://mountainmath.github.io/cansim/reference/csv2arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"convert csv to arrow — csv2arrow","title":"convert csv to arrow — csv2arrow","text":"convert csv arrow","code":""},{"path":"https://mountainmath.github.io/cansim/reference/csv2arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert csv to arrow — csv2arrow","text":"","code":"csv2arrow(   csv_file,   arrow_file,   format = \"parquet\",   col_names,   value_column = \"VALUE\",   partitioning = c(),   na = c(NA, \"..\", \"\", \"...\", \"F\"),   text_encoding = \"UTF-8\",   delim = \",\" )"},{"path":"https://mountainmath.github.io/cansim/reference/csv2arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert csv to arrow — csv2arrow","text":"csv_file input csv path arrow_file output arrow database path format format arrow file, \"parquet\" \"feather\" (default parquet) col_names column names csv file value_column name value column numeric data partitioning optional partition columns na na character strings text_encoding encoding csv file (default UTF-8) delim (Optional) csv deliminator, default \",\"","code":""},{"path":"https://mountainmath.github.io/cansim/reference/csv2arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert csv to arrow — csv2arrow","text":"database connection","code":""},{"path":"https://mountainmath.github.io/cansim/reference/csv2sqlite.html","id":null,"dir":"Reference","previous_headings":"","what":"convert csv to sqlite adapted from https://rdrr.io/github/coolbutuseless/csv2sqlite/src/R/csv2sqlite.R — csv2sqlite","title":"convert csv to sqlite adapted from https://rdrr.io/github/coolbutuseless/csv2sqlite/src/R/csv2sqlite.R — csv2sqlite","text":"convert csv sqlite adapted https://rdrr.io/github/coolbutuseless/csv2sqlite/src/R/csv2sqlite.R","code":""},{"path":"https://mountainmath.github.io/cansim/reference/csv2sqlite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert csv to sqlite adapted from https://rdrr.io/github/coolbutuseless/csv2sqlite/src/R/csv2sqlite.R — csv2sqlite","text":"","code":"csv2sqlite(   csv_file,   sqlite_file,   table_name,   transform = NULL,   chunk_size = 5e+06,   append = FALSE,   col_types = NULL,   na = c(NA, \"..\", \"\", \"...\", \"F\"),   text_encoding = \"UTF-8\",   delim = \",\",   ... )"},{"path":"https://mountainmath.github.io/cansim/reference/csv2sqlite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert csv to sqlite adapted from https://rdrr.io/github/coolbutuseless/csv2sqlite/src/R/csv2sqlite.R — csv2sqlite","text":"csv_file input csv path sqlite_file output sql database path table_name sql table name transform optional function transforms chunk chunk_size optional chunk size read/write data, default=1,000,000 append optional parameter, append database overwrite, default=`FALSE` col_types optional parameter csv column types na na character strings text_encoding encoding csv file (default UTF-8) delim (Optional) csv deliminator, default \",\" ... (Optional) additional parameters passed `readr::read_delim_chunked`","code":""},{"path":"https://mountainmath.github.io/cansim/reference/csv2sqlite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert csv to sqlite adapted from https://rdrr.io/github/coolbutuseless/csv2sqlite/src/R/csv2sqlite.R — csv2sqlite","text":"database connection","code":""},{"path":"https://mountainmath.github.io/cansim/reference/disconnect_cansim_sqlite.html","id":null,"dir":"Reference","previous_headings":"","what":"Disconnect from a cansim database connection — disconnect_cansim_sqlite","title":"Disconnect from a cansim database connection — disconnect_cansim_sqlite","text":"Disconnect cansim database connection","code":""},{"path":"https://mountainmath.github.io/cansim/reference/disconnect_cansim_sqlite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disconnect from a cansim database connection — disconnect_cansim_sqlite","text":"","code":"disconnect_cansim_sqlite(connection)"},{"path":"https://mountainmath.github.io/cansim/reference/disconnect_cansim_sqlite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disconnect from a cansim database connection — disconnect_cansim_sqlite","text":"connection connection database","code":""},{"path":"https://mountainmath.github.io/cansim/reference/disconnect_cansim_sqlite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disconnect from a cansim database connection — disconnect_cansim_sqlite","text":"`NULL“","code":""},{"path":"https://mountainmath.github.io/cansim/reference/disconnect_cansim_sqlite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disconnect from a cansim database connection — disconnect_cansim_sqlite","text":"","code":"if (FALSE) { # \\dontrun{ con <- get_cansim_sqlite(\"34-10-0013\") disconnect_cansim_sqlite(con) } # }"},{"path":"https://mountainmath.github.io/cansim/reference/fold_in_metadata_for_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Fold in metadata and for selected columns — fold_in_metadata_for_columns","title":"Fold in metadata and for selected columns — fold_in_metadata_for_columns","text":"Fold metadata selected columns","code":""},{"path":"https://mountainmath.github.io/cansim/reference/fold_in_metadata_for_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fold in metadata and for selected columns — fold_in_metadata_for_columns","text":"","code":"fold_in_metadata_for_columns(data, data_path, column_names)"},{"path":"https://mountainmath.github.io/cansim/reference/fold_in_metadata_for_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fold in metadata and for selected columns — fold_in_metadata_for_columns","text":"data tibble StatCan table data e.g. returned get_cansim. data_path base path save parsed metadata column_names names columns","code":""},{"path":"https://mountainmath.github.io/cansim/reference/fold_in_metadata_for_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fold in metadata and for selected columns — fold_in_metadata_for_columns","text":"tibble including metadata information","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a Statistics Canada data table using NDM catalogue number — get_cansim","title":"Retrieve a Statistics Canada data table using NDM catalogue number — get_cansim","text":"Retrieves data table using NDM catalogue number tidy data frame. Retrieved table data cached duration current R session default.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a Statistics Canada data table using NDM catalogue number — get_cansim","text":"","code":"get_cansim(   cansimTableNumber,   language = \"english\",   refresh = FALSE,   timeout = 200,   factors = TRUE,   default_month = \"07\",   default_day = \"01\" )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a Statistics Canada data table using NDM catalogue number — get_cansim","text":"cansimTableNumber NDM table number load language \"en\" \"english\" English \"fr\" \"french\" French language versions (defaults English) refresh (Optional) set TRUE, forces reload data table (default FALSE) timeout (Optional) Timeout seconds downloading cansim table work around scenarios StatCan servers drop network connection. factors (Optional) Logical value indicating dimensions converted factors. (Default set TRUE). default_month default month used creating Date objects annual data (default set \"07\") default_day default day month used creating Date objects monthly data (default set \"01\") Set higher values large tables slow network connection. (Default 200).","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a Statistics Canada data table using NDM catalogue number — get_cansim","text":"tibble StatCan Table data added Date column inferred date objects added val_norm column normalized value VALUE column.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a Statistics Canada data table using NDM catalogue number — get_cansim","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim(\"34-10-0013\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_changed_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a list of modified tables since a given date — get_cansim_changed_tables","title":"Retrieve a list of modified tables since a given date — get_cansim_changed_tables","text":"Retrieve list tables modified updated since specified date.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_changed_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a list of modified tables since a given date — get_cansim_changed_tables","text":"","code":"get_cansim_changed_tables(start_date, end_date = NULL)"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_changed_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a list of modified tables since a given date — get_cansim_changed_tables","text":"start_date Starting date YYYY-MM-DD format look changes changed date end_date Optional end date YYYY-MM-DD format look changes changed date, default start date","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_changed_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a list of modified tables since a given date — get_cansim_changed_tables","text":"tibble Statistics Canada data table product ids release times","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_changed_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a list of modified tables since a given date — get_cansim_changed_tables","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_changed_tables(\"2018-08-01\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_code_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NDM code sets — get_cansim_code_set","title":"Get NDM code sets — get_cansim_code_set","text":"Useful get list surveys  subjects used internally","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_code_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NDM code sets — get_cansim_code_set","text":"","code":"get_cansim_code_set(   code_set = c(\"scalar\", \"frequency\", \"symbol\", \"status\", \"uom\", \"survey\", \"subject\",     \"wdsResponseStatus\"),   refresh = FALSE )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_code_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get NDM code sets — get_cansim_code_set","text":"code_set code set retrieve. refresh Default FALSE, repeated calls session hit cached data. refresh code list running R session set TRUE","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_code_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get NDM code sets — get_cansim_code_set","text":"tibble english french labels given code set","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_code_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get NDM code sets — get_cansim_code_set","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_code_set(\"survey\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_column_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Statistics Canada data table categories for a specific column — get_cansim_column_categories","title":"Retrieve Statistics Canada data table categories for a specific column — get_cansim_column_categories","text":"Returns table column details given NDM table number English French. Retrieved table information data cached duration R session .","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_column_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Statistics Canada data table categories for a specific column — get_cansim_column_categories","text":"","code":"get_cansim_column_categories(   cansimTableNumber,   column,   language = \"english\",   refresh = FALSE,   timeout = 200 )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_column_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Statistics Canada data table categories for a specific column — get_cansim_column_categories","text":"cansimTableNumber NDM table number load column specified column retrieve category information language \"en\" \"english\" English \"fr\" \"french\" French language versions (default set English) refresh (Optional) set TRUE, forces reload data table (default FALSE) timeout (Optional) Timeout seconds downloading cansim table work around scenarios StatCan servers drop network connection.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_column_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Statistics Canada data table categories for a specific column — get_cansim_column_categories","text":"tibble detailed information StatCan table categories specified field","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_column_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Statistics Canada data table categories for a specific column — get_cansim_column_categories","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_column_categories(\"34-10-0013\", \"Geography\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_column_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Statistics Canada data table column list — get_cansim_column_list","title":"Retrieve Statistics Canada data table column list — get_cansim_column_list","text":"Returns table column details given NDM table number English French. Retrieved table information data cached duration R session .","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_column_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Statistics Canada data table column list — get_cansim_column_list","text":"","code":"get_cansim_column_list(   cansimTableNumber,   language = \"english\",   refresh = FALSE,   timeout = 200 )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_column_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Statistics Canada data table column list — get_cansim_column_list","text":"cansimTableNumber NDM table number load language \"en\" \"english\" English \"fr\" \"french\" French language versions (default set English) refresh (Optional) set TRUE, forces reload data table (default FALSE) timeout (Optional) Timeout seconds downloading cansim table work around scenarios StatCan servers drop network connection.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_column_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Statistics Canada data table column list — get_cansim_column_list","text":"tibble listing column names StatCan table.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_column_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Statistics Canada data table column list — get_cansim_column_list","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_column_list(\"34-10-0013\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a Statistics Canada data table using NDM catalogue number as parquet, feather, or sqlite database connection — get_cansim_connection","title":"Retrieve a Statistics Canada data table using NDM catalogue number as parquet, feather, or sqlite database connection — get_cansim_connection","text":"Retrieves data table using NDM catalogue number parquet, feather, SQLite database connection. Retrieved table data cached permanently cache path supplied duration current R session. table cached function check newer version available emit warning message cached table date.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a Statistics Canada data table using NDM catalogue number as parquet, feather, or sqlite database connection — get_cansim_connection","text":"","code":"get_cansim_connection(   cansimTableNumber,   language = \"english\",   format = \"parquet\",   partitioning = c(),   refresh = FALSE,   timeout = 1000,   cache_path = Sys.getenv(\"CANSIM_CACHE_PATH\") )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a Statistics Canada data table using NDM catalogue number as parquet, feather, or sqlite database connection — get_cansim_connection","text":"cansimTableNumber NDM table number load language \"en\" \"english\" English \"fr\" \"french\" French language versions (defaults English) format (Optional) format data table retrieve. Either \"parquet\", \"feather\", sqlite (default \"parquet\"). partitioning (Optional) Partition columns use parquet feather formats. refresh (Optional) Valid options FALSE (default), TRUE, \"auto\". set TRUE, forces reload data table, set \"auto\" refresh table downloading newest version StatCan table date. set FALSE table date warning emitted alert user data outdated. timeout (Optional) Timeout seconds downloading cansim table work around scenarios StatCan servers drop network connection. cache_path (Optional) Path cache table permanently. default, data cached path specified `Sys.getenv('CANSIM_CACHE_PATH')`, set. Otherwise use `tempdir()`.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a Statistics Canada data table using NDM catalogue number as parquet, feather, or sqlite database connection — get_cansim_connection","text":"database connection local parquet, feather, sqlite database StatCan Table data. data frames calling `collect()` `collect_and_normalize()` identical possibly different row order.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_connection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a Statistics Canada data table using NDM catalogue number as parquet, feather, or sqlite database connection — get_cansim_connection","text":"","code":"if (FALSE) { # \\dontrun{ con <- get_cansim_connection(\"34-10-0013\")  # Work with the data connection glimpse(con)  } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_cube_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve table metadata from Statistics Canada API — get_cansim_cube_metadata","title":"Retrieve table metadata from Statistics Canada API — get_cansim_cube_metadata","text":"Retrieves table metadata given input table number vector table numbers using either new old table number format. Patience suggested Statistics Canada API can slow. `list_cansim_tables()` function can used alternative retrieve (cached) list CANSIM tables (limited) metadata.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_cube_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve table metadata from Statistics Canada API — get_cansim_cube_metadata","text":"","code":"get_cansim_cube_metadata(cansimTableNumber, type = \"overview\", refresh = FALSE)"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_cube_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve table metadata from Statistics Canada API — get_cansim_cube_metadata","text":"cansimTableNumber new old CANSIM/NDM table number vector table numbers type type metadata get, options \"overview\", \"members\", \"notes\", \"corrections\". refresh Refresh data Statistics Canada API","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_cube_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve table metadata from Statistics Canada API — get_cansim_cube_metadata","text":"tibble containing table metadata","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_cube_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve table metadata from Statistics Canada API — get_cansim_cube_metadata","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_cube_metadata(\"34-10-0013\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_data_for_table_coord_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve data for specified Statistics Canada data product for last N periods for specific coordinates — get_cansim_data_for_table_coord_periods","title":"Retrieve data for specified Statistics Canada data product for last N periods for specific coordinates — get_cansim_data_for_table_coord_periods","text":"Allows retrieval data Statistics Canada data table specific table coordinates. allows partial targeted download tables can effectively combined get_cansim_table_template function help pinpoint data series interest. StatCan API can process 300 coordinates time, 300 coordinates specified function batch requests API.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_data_for_table_coord_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve data for specified Statistics Canada data product for last N periods for specific coordinates — get_cansim_data_for_table_coord_periods","text":"","code":"get_cansim_data_for_table_coord_periods(   tableCoordinates,   periods = NULL,   language = \"english\",   refresh = FALSE,   timeout = 200,   factors = TRUE,   default_month = \"07\",   default_day = \"01\" )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_data_for_table_coord_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve data for specified Statistics Canada data product for last N periods for specific coordinates — get_cansim_data_for_table_coord_periods","text":"tableCoordinates Either list vectors coordinates table number, (filtered) data frame returned get_cansim_table_template. periods Optional numeric value number latest periods retrieve data , default NULL case data periods downloaded. Alternatively can specified coordinate tableCoordinates data frame, argument ignored data frame \"periods\" column. language \"eng\" \"english\" English \"fra\" \"french\" French language versions (defaults English) refresh (Optional) set TRUE, forces reload data table (default FALSE) timeout (Optional) Timeout seconds downloading cansim table work around scenarios StatCan servers drop network connection. factors (Optional) Logical value indicating dimensions converted factors. (Default set TRUE). default_month default month used creating Date objects annual data (default set \"07\") default_day default day month used creating Date objects monthly data (default set \"01\")","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_data_for_table_coord_periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve data for specified Statistics Canada data product for last N periods for specific coordinates — get_cansim_data_for_table_coord_periods","text":"tibble data matching specified coordinate period input arguments","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_data_for_table_coord_periods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve data for specified Statistics Canada data product for last N periods for specific coordinates — get_cansim_data_for_table_coord_periods","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_data_for_table_coord_periods(list(\"35-10-0003\"=c(\"1.1\",\"1.12\")),periods=3) } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_key_release_schedule.html","id":null,"dir":"Reference","previous_headings":"","what":"Major economic indicator release schedule — get_cansim_key_release_schedule","title":"Major economic indicator release schedule — get_cansim_key_release_schedule","text":"Returns every release date major economic indicators since March 14, 2012. also includes scheduled future releases.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_key_release_schedule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Major economic indicator release schedule — get_cansim_key_release_schedule","text":"","code":"get_cansim_key_release_schedule()"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_key_release_schedule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Major economic indicator release schedule — get_cansim_key_release_schedule","text":"tibble data, details major economic indicator release","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_key_release_schedule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Major economic indicator release schedule — get_cansim_key_release_schedule","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_key_release_schedule() } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_series_info_cube_coord.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve series info for given table id and coordinates — get_cansim_series_info_cube_coord","title":"Retrieve series info for given table id and coordinates — get_cansim_series_info_cube_coord","text":"Retrieves series information coordinates","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_series_info_cube_coord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve series info for given table id and coordinates — get_cansim_series_info_cube_coord","text":"","code":"get_cansim_series_info_cube_coord(   cansimTableNumber,   coordinates,   timeout = 1000,   refresh = FALSE )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_series_info_cube_coord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve series info for given table id and coordinates — get_cansim_series_info_cube_coord","text":"cansimTableNumber new old CANSIM/NDM table number vector table numbers coordinates vector coordinates timeout Timeout API call refresh Refresh data Statistics Canada API","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_series_info_cube_coord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve series info for given table id and coordinates — get_cansim_series_info_cube_coord","text":"tibble containing table template","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_series_info_cube_coord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve series info for given table id and coordinates — get_cansim_series_info_cube_coord","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_table_template(\"34-10-0013\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_sqlite.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a Statistics Canada data table using NDM catalogue number as SQLite database connection — get_cansim_sqlite","title":"Retrieve a Statistics Canada data table using NDM catalogue number as SQLite database connection — get_cansim_sqlite","text":"Retrieves data table using NDM catalogue number SQLite table. Retrieved table data cached permanently cache path supplied duration current R session. function check latest release data table emit warning message cached table date.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_sqlite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a Statistics Canada data table using NDM catalogue number as SQLite database connection — get_cansim_sqlite","text":"","code":"get_cansim_sqlite(   cansimTableNumber,   language = \"english\",   refresh = FALSE,   auto_refresh = FALSE,   timeout = 1000,   cache_path = Sys.getenv(\"CANSIM_CACHE_PATH\") )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_sqlite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a Statistics Canada data table using NDM catalogue number as SQLite database connection — get_cansim_sqlite","text":"cansimTableNumber NDM table number load language \"en\" \"english\" English \"fr\" \"french\" French language versions (defaults English) refresh (Optional) set TRUE, forces reload data table (default FALSE) auto_refresh (Optional) set TRUE, reload data table new version available (default FALSE) timeout (Optional) Timeout seconds downloading cansim table work around scenarios StatCan servers drop network connection. cache_path (Optional) Path cache table permanently. default, data cached path specified `Sys.getenv('CANSIM_CACHE_PATH')`, set. Otherwise use `tempdir()`.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_sqlite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a Statistics Canada data table using NDM catalogue number as SQLite database connection — get_cansim_sqlite","text":"database connection local SQLite database StatCan Table data.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_sqlite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a Statistics Canada data table using NDM catalogue number as SQLite database connection — get_cansim_sqlite","text":"","code":"if (FALSE) { # \\dontrun{ con <- get_cansim_connection(\"34-10-0013\", format=\"sqlite\")  # Work with the data connection gplimpse(con)  disconnect_cansim_sqlite(con) } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Statistics Canada data table information — get_cansim_table_info","title":"Retrieve Statistics Canada data table information — get_cansim_table_info","text":"Returns table information given NDM table catalogue number English French. Retrieved table information data cached duration R session .","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Statistics Canada data table information — get_cansim_table_info","text":"","code":"get_cansim_table_info(   cansimTableNumber,   language = \"english\",   refresh = FALSE,   timeout = 200 )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Statistics Canada data table information — get_cansim_table_info","text":"cansimTableNumber NDM table number load language \"en\" \"english\" English \"fr\" \"french\" French language versions (default set English) refresh (Optional) set TRUE, forces reload data table (default FALSE) timeout (Optional) Timeout seconds downloading cansim table work around scenarios StatCan servers drop network connection.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Statistics Canada data table information — get_cansim_table_info","text":"tibble table overview information","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Statistics Canada data table information — get_cansim_table_info","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_table_info(\"34-10-0013\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_last_release_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the latest release data for a StatCan table, if available — get_cansim_table_last_release_date","title":"Get the latest release data for a StatCan table, if available — get_cansim_table_last_release_date","text":"can used check table last updated.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_last_release_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the latest release data for a StatCan table, if available — get_cansim_table_last_release_date","text":"","code":"get_cansim_table_last_release_date(cansimTableNumber)"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_last_release_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the latest release data for a StatCan table, if available — get_cansim_table_last_release_date","text":"cansimTableNumber NDM table number","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_last_release_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the latest release data for a StatCan table, if available — get_cansim_table_last_release_date","text":"datetime object release data available, NULL otherwise.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_last_release_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the latest release data for a StatCan table, if available — get_cansim_table_last_release_date","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_table_last_release_date(\"34-10-0013\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_notes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Statistics Canada data table notes and column categories — get_cansim_table_notes","title":"Retrieve Statistics Canada data table notes and column categories — get_cansim_table_notes","text":"Returns table notes given NDM table number English French. Retrieved table information data cached duration R session .","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_notes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Statistics Canada data table notes and column categories — get_cansim_table_notes","text":"","code":"get_cansim_table_notes(   cansimTableNumber,   language = \"en\",   refresh = FALSE,   timeout = 200 )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_notes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Statistics Canada data table notes and column categories — get_cansim_table_notes","text":"cansimTableNumber NDM table number load language \"en\" \"english\" English \"fr\" \"french\" French language versions (default set English) refresh (Optional) set TRUE, forces reload data table (default FALSE) timeout (Optional) Timeout seconds downloading cansim table work around scenarios StatCan servers drop network connection.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_notes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Statistics Canada data table notes and column categories — get_cansim_table_notes","text":"tibble table notes.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_notes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Statistics Canada data table notes and column categories — get_cansim_table_notes","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_table_notes(\"34-10-0013\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_overview.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Statistics Canada data table overview text — get_cansim_table_overview","title":"Retrieve Statistics Canada data table overview text — get_cansim_table_overview","text":"Prints table overview information console output. order display table overview information, selected CANSIM table must loaded entirely display overview information. Overview information printed console English French, specified.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_overview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Statistics Canada data table overview text — get_cansim_table_overview","text":"","code":"get_cansim_table_overview(   cansimTableNumber,   language = \"english\",   refresh = FALSE )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_overview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Statistics Canada data table overview text — get_cansim_table_overview","text":"cansimTableNumber NDM table number load language \"en\" \"english\" English \"fr\" \"french\" French language versions (default set English) refresh (Optional) set TRUE, forces reload data table (default FALSE)","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_overview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Statistics Canada data table overview text — get_cansim_table_overview","text":"none","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_overview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Statistics Canada data table overview text — get_cansim_table_overview","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_table_overview(\"34-10-0013\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_short_notes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Statistics Canada data table short notes — get_cansim_table_short_notes","title":"Retrieve Statistics Canada data table short notes — get_cansim_table_short_notes","text":"Returns table notes given NDM table number English French. Retrieved table information data cached duration R session .","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_short_notes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Statistics Canada data table short notes — get_cansim_table_short_notes","text":"","code":"get_cansim_table_short_notes(   cansimTableNumber,   language = \"english\",   refresh = FALSE,   timeout = 200 )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_short_notes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Statistics Canada data table short notes — get_cansim_table_short_notes","text":"cansimTableNumber NDM table number load language \"en\" \"english\" English \"fr\" \"french\" French language versions (default set English) refresh (Optional) set TRUE, forces reload data table (default FALSE) timeout (Optional) Timeout seconds downloading cansim table work around scenarios StatCan servers drop network connection.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_short_notes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Statistics Canada data table short notes — get_cansim_table_short_notes","text":"tibble StatCan Notes table","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_short_notes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Statistics Canada data table short notes — get_cansim_table_short_notes","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_table_short_notes(\"34-10-0013\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Statistics Canada data table subject detail — get_cansim_table_subject","title":"Retrieve Statistics Canada data table subject detail — get_cansim_table_subject","text":"Returns table subject detail given NDM table number English French. Retrieved table information data cached duration R session .","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Statistics Canada data table subject detail — get_cansim_table_subject","text":"","code":"get_cansim_table_subject(   cansimTableNumber,   language = \"english\",   refresh = FALSE,   timeout = 200 )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Statistics Canada data table subject detail — get_cansim_table_subject","text":"cansimTableNumber NDM table number load language \"en\" \"english\" English \"fr\" \"french\" French language versions (default set English) refresh (Optional) set TRUE, forces reload data table (default FALSE) timeout (Optional) Timeout seconds downloading cansim table work around scenarios StatCan servers drop network connection.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_subject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Statistics Canada data table subject detail — get_cansim_table_subject","text":"tibble table subject code name.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_subject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Statistics Canada data table subject detail — get_cansim_table_subject","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_table_subject(\"34-10-0013\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Statistics Canada data table survey detail — get_cansim_table_survey","title":"Retrieve Statistics Canada data table survey detail — get_cansim_table_survey","text":"Returns table survey detail given NDM table number English French. Retrieved table information data cached duration R session .","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Statistics Canada data table survey detail — get_cansim_table_survey","text":"","code":"get_cansim_table_survey(   cansimTableNumber,   language = \"english\",   refresh = FALSE,   timeout = 200 )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Statistics Canada data table survey detail — get_cansim_table_survey","text":"cansimTableNumber NDM table number load language \"en\" \"english\" English \"fr\" \"french\" French language versions (default set English) refresh (Optional) set TRUE, forces reload data table (default FALSE) timeout (Optional) Timeout seconds downloading cansim table work around scenarios StatCan servers drop network connection.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Statistics Canada data table survey detail — get_cansim_table_survey","text":"tibble table survey code name","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Statistics Canada data table survey detail — get_cansim_table_survey","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_table_survey(\"34-10-0013\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve table template from Statistics Canada API — get_cansim_table_template","title":"Retrieve table template from Statistics Canada API — get_cansim_table_template","text":"table template consists dimensions members coordinates table can used explore filter table data downloading subsets table. add vector Ids (possibly filtered) template `add_cansim_vectors_to_template` function can used.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve table template from Statistics Canada API — get_cansim_table_template","text":"","code":"get_cansim_table_template(   cansimTableNumber,   language = \"english\",   refresh = FALSE )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve table template from Statistics Canada API — get_cansim_table_template","text":"cansimTableNumber new old CANSIM/NDM table number vector table numbers language Language dimension member names, either \"eng\" \"fra\" refresh Refresh data Statistics Canada API","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve table template from Statistics Canada API — get_cansim_table_template","text":"tibble containing table template","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve table template from Statistics Canada API — get_cansim_table_template","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_table_template(\"34-10-0013\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a Statistics Canada data table URL given a table number — get_cansim_table_url","title":"Retrieve a Statistics Canada data table URL given a table number — get_cansim_table_url","text":"Retrieve URL table API given table number. Offers stable approach manually guessing URL table.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a Statistics Canada data table URL given a table number — get_cansim_table_url","text":"","code":"get_cansim_table_url(cansimTableNumber, language = \"en\")"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a Statistics Canada data table URL given a table number — get_cansim_table_url","text":"cansimTableNumber NDM table number load language \"en\" \"english\" English \"fr\" \"french\" French language versions (defaults English)","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a Statistics Canada data table URL given a table number — get_cansim_table_url","text":"String object containing URL specified table number","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_table_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a Statistics Canada data table URL given a table number — get_cansim_table_url","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_table_url(\"34-10-0013\") get_cansim_table_url(\"34-10-0013\", language = \"fr\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve data for a Statistics Canada data vector released within a given time frame — get_cansim_vector","title":"Retrieve data for a Statistics Canada data vector released within a given time frame — get_cansim_vector","text":"Allows retrieval data specified vector series given time window. Accessing data vector allows targeted extraction time series. Discovering vectors interest can achieved using StatCan table web interface using get_cansim_table_template function help pinpoint data series interest, chaining add_cansim_vectors_to_template function add cansim vector information template data. StatCan API can process 300 coordinates time, 300 coordinates specified function batch requests API.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve data for a Statistics Canada data vector released within a given time frame — get_cansim_vector","text":"","code":"get_cansim_vector(   vectors,   start_time = as.Date(\"1800-01-01\"),   end_time = Sys.time(),   use_ref_date = TRUE,   language = \"english\",   refresh = FALSE,   timeout = 200,   factors = TRUE,   default_month = \"07\",   default_day = \"01\" )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve data for a Statistics Canada data vector released within a given time frame — get_cansim_vector","text":"vectors list vectors retrieve start_time Starting date YYYY-MM-DD format, applies REF_DATE releaseTime, depending use_ref_date parameter end_time Set optional end time filter YYYY-MM-DD format (defaults current system time) use_ref_date Optional, TRUE default. set TRUE, uses REF_DATE vector data filter, otherwise uses StatisticsCanada's releaseDate value filtering specified vectors. language \"en\" \"english\" English \"fr\" \"french\" French language versions (defaults English) refresh (Optional) set TRUE, forces reload data table (default FALSE) timeout (Optional) Timeout seconds downloading cansim table work around scenarios StatCan servers drop network connection. factors (Optional) Logical value indicating dimensions converted factors. (Default set TRUE). default_month default month used creating Date objects annual data (default set \"07\") default_day default day month used creating Date objects monthly data (default set \"01\")","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve data for a Statistics Canada data vector released within a given time frame — get_cansim_vector","text":"tibble data vectors released start end time","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve data for a Statistics Canada data vector released within a given time frame — get_cansim_vector","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_vector(\"v41690973\",\"2015-01-01\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector_for_latest_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve data for specified Statistics Canada data vector(s) for last N periods — get_cansim_vector_for_latest_periods","title":"Retrieve data for specified Statistics Canada data vector(s) for last N periods — get_cansim_vector_for_latest_periods","text":"Allows retrieval data specified vector series N -recently released periods. Accessing data vector allows targeted extraction time series. Discovering vectors interest can achieved using StatCan table web interface using get_cansim_table_template function help pinpoint data series interest, chaining add_cansim_vectors_to_template function add cansim vector information template data. StatCan API can process 300 coordinates time, 300 coordinates specified function batch requests API.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector_for_latest_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve data for specified Statistics Canada data vector(s) for last N periods — get_cansim_vector_for_latest_periods","text":"","code":"get_cansim_vector_for_latest_periods(   vectors,   periods = NULL,   language = \"english\",   refresh = FALSE,   timeout = 200,   factors = TRUE,   default_month = \"07\",   default_day = \"01\" )"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector_for_latest_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve data for specified Statistics Canada data vector(s) for last N periods — get_cansim_vector_for_latest_periods","text":"vectors list vectors retrieve periods Numeric value number latest periods retrieve data , default data retrieved. language \"en\" \"english\" English \"fr\" \"french\" French language versions (defaults English) refresh (Optional) set TRUE, forces reload data table (default FALSE) timeout (Optional) Timeout seconds downloading cansim table work around scenarios StatCan servers drop network connection. factors (Optional) Logical value indicating dimensions converted factors. (Default set TRUE). default_month default month used creating Date objects annual data (default set \"07\") default_day default day month used creating Date objects monthly data (default set \"01\")","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector_for_latest_periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve data for specified Statistics Canada data vector(s) for last N periods — get_cansim_vector_for_latest_periods","text":"tibble data specified vector(s) last N periods","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector_for_latest_periods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve data for specified Statistics Canada data vector(s) for last N periods — get_cansim_vector_for_latest_periods","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_vector_for_latest_periods(\"v41690973\",10) } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve metadata for specified Statistics Canada data vectors — get_cansim_vector_info","title":"Retrieve metadata for specified Statistics Canada data vectors — get_cansim_vector_info","text":"Allows retrieval metadata Statistics Canada data vectors","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve metadata for specified Statistics Canada data vectors — get_cansim_vector_info","text":"","code":"get_cansim_vector_info(vectors)"},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve metadata for specified Statistics Canada data vectors — get_cansim_vector_info","text":"vectors vector cansim vectors","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve metadata for specified Statistics Canada data vectors — get_cansim_vector_info","text":"tibble metadata selected vectors","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_cansim_vector_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve metadata for specified Statistics Canada data vectors — get_cansim_vector_info","text":"","code":"if (FALSE) { # \\dontrun{ get_cansim_vector_info(\"v41690973\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/get_deduped_column_level_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get column names de-duplicated and in the correct order — get_deduped_column_level_data","title":"Get column names de-duplicated and in the correct order — get_deduped_column_level_data","text":"Get column names de-duplicated correct order","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_deduped_column_level_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get column names de-duplicated and in the correct order — get_deduped_column_level_data","text":"","code":"get_deduped_column_level_data(cansimTableNumber, language, column)"},{"path":"https://mountainmath.github.io/cansim/reference/get_deduped_column_level_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get column names de-duplicated and in the correct order — get_deduped_column_level_data","text":"cansimTableNumber table number language language column names column column name","code":""},{"path":"https://mountainmath.github.io/cansim/reference/get_deduped_column_level_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get column names de-duplicated and in the correct order — get_deduped_column_level_data","text":"tibble column names","code":""},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_cached_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"List cached cansim arrow and SQlite databases — list_cansim_cached_tables","title":"List cached cansim arrow and SQlite databases — list_cansim_cached_tables","text":"List cached cansim arrow SQlite databases","code":""},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_cached_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List cached cansim arrow and SQlite databases — list_cansim_cached_tables","text":"","code":"list_cansim_cached_tables(   cache_path = Sys.getenv(\"CANSIM_CACHE_PATH\"),   refresh = FALSE )"},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_cached_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List cached cansim arrow and SQlite databases — list_cansim_cached_tables","text":"cache_path Optional, default value `Sys.getenv('CANSIM_CACHE_PATH')`. refresh Optional, refresh last updated date cached cansim tables","code":""},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_cached_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List cached cansim arrow and SQlite databases — list_cansim_cached_tables","text":"tibble list tables currently cached given cache path.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_cached_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List cached cansim arrow and SQlite databases — list_cansim_cached_tables","text":"","code":"if (FALSE) { # \\dontrun{ list_cansim_cached_tables() } # }"},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_cubes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get overview list for all Statistics Canada data cubes — list_cansim_cubes","title":"Get overview list for all Statistics Canada data cubes — list_cansim_cubes","text":"Generates overview table containing metadata available Statistics Canada data cubes.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_cubes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get overview list for all Statistics Canada data cubes — list_cansim_cubes","text":"","code":"list_cansim_cubes(lite = FALSE, refresh = FALSE, quiet = FALSE)"},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_cubes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get overview list for all Statistics Canada data cubes — list_cansim_cubes","text":"lite Get version without cube dimensions comments faster retrieval, default FALSE. refresh Default FALSE, repeated calls session hit cached data. quiet Optional, suppress messages refresh code list running R session set TRUE","code":""},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_cubes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get overview list for all Statistics Canada data cubes — list_cansim_cubes","text":"tibble available Statistics Canada data cubes, including NDM table number, cube title, start end dates, achieve status, subject survey codes, frequency codes list cube dimensions.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_cubes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get overview list for all Statistics Canada data cubes — list_cansim_cubes","text":"","code":"if (FALSE) { # \\dontrun{ list_cansim_cubes() } # }"},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_sqlite_cached_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"List cached cansim SQLite database — list_cansim_sqlite_cached_tables","title":"List cached cansim SQLite database — list_cansim_sqlite_cached_tables","text":"List cached cansim SQLite database","code":""},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_sqlite_cached_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List cached cansim SQLite database — list_cansim_sqlite_cached_tables","text":"","code":"list_cansim_sqlite_cached_tables(   cache_path = Sys.getenv(\"CANSIM_CACHE_PATH\"),   refresh = FALSE )"},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_sqlite_cached_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List cached cansim SQLite database — list_cansim_sqlite_cached_tables","text":"cache_path Optional, default value `Sys.getenv('CANSIM_CACHE_PATH')`. refresh Optional, refresh last updated date cached cansim tables","code":""},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_sqlite_cached_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List cached cansim SQLite database — list_cansim_sqlite_cached_tables","text":"tibble list tables currently cached given cache path.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_sqlite_cached_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List cached cansim SQLite database — list_cansim_sqlite_cached_tables","text":"","code":"if (FALSE) { # \\dontrun{ list_cansim_cached_tables() } # }"},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get overview list for all Statistics Canada data tables (deprecated) — list_cansim_tables","title":"Get overview list for all Statistics Canada data tables (deprecated) — list_cansim_tables","text":"method deprecated, please use `list_cansim_cubes` instead. Generates overview table containing metadata available Statistics Canada data tables. new updated table generated table already exist cached form force refresh option selected (set FALSE default). can take time process involves scraping hundreds Statistics Canada web pages gather required metadata. option cansim.cache_path set look store overview table directory.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get overview list for all Statistics Canada data tables (deprecated) — list_cansim_tables","text":"","code":"list_cansim_tables(refresh = FALSE)"},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get overview list for all Statistics Canada data tables (deprecated) — list_cansim_tables","text":"refresh Default FALSE, regenerate table set TRUE","code":""},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get overview list for all Statistics Canada data tables (deprecated) — list_cansim_tables","text":"tibble available Statistics Canada data tables, listing title, Statistics Canada data table catalogue number, deprecated CANSIM table number, description, geography","code":""},{"path":"https://mountainmath.github.io/cansim/reference/list_cansim_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get overview list for all Statistics Canada data tables (deprecated) — list_cansim_tables","text":"","code":"if (FALSE) { # \\dontrun{ list_cansim_tables() } # }"},{"path":"https://mountainmath.github.io/cansim/reference/normalize_cansim_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize retrieved data table values to appropriate scales — normalize_cansim_values","title":"Normalize retrieved data table values to appropriate scales — normalize_cansim_values","text":"Facilitates working Statistics Canada data table values retrieved using package setting units counts/dollars instead millions, etc. \"replacement_value\" set, replace VALUE field normalized values drop scale column. Otherwise keep scale columns create new column named replacement_value normalized value. attempt parse REF_DATE field create R date variable. currently experimental.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/normalize_cansim_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize retrieved data table values to appropriate scales — normalize_cansim_values","text":"","code":"normalize_cansim_values(   data,   replacement_value = \"val_norm\",   normalize_percent = TRUE,   default_month = \"01\",   default_day = \"01\",   factors = TRUE,   strip_classification_code = FALSE,   cansimTableNumber = NULL,   internal = FALSE )"},{"path":"https://mountainmath.github.io/cansim/reference/normalize_cansim_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize retrieved data table values to appropriate scales — normalize_cansim_values","text":"data retrieved data table returned get_cansim() pr get_cansim_ndm() replacement_value (Optional) name column manipulated value returned . Defaults \"val_norm\" normalize_percent (Optional) TRUE (default) normalizes percentages changing rates default_month default month used creating Date objects annual data (default set \"01\") default_day default day month used creating Date objects monthly data (default set \"01\") factors (Optional) Logical value indicating dimensions converted factors. (Default set TRUE). strip_classification_code (strip_classification_code) Logical value indicating classification code stripped names. (Default set FALSE, factors=TRUE overridden set TRUE). cansimTableNumber (Optional) needed operating results SQLite connections. internal (Optional) Flag indicate function called internally.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/normalize_cansim_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize retrieved data table values to appropriate scales — normalize_cansim_values","text":"Returns tibble adjusted values.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/normalize_cansim_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize retrieved data table values to appropriate scales — normalize_cansim_values","text":"","code":"if (FALSE) { # \\dontrun{ cansim_table <- get_cansim(\"34-10-0013\") normalize_cansim_values(cansim_table) } # }"},{"path":"https://mountainmath.github.io/cansim/reference/parse_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse metadata — parse_metadata","title":"Parse metadata — parse_metadata","text":"Parse metadata","code":""},{"path":"https://mountainmath.github.io/cansim/reference/parse_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse metadata — parse_metadata","text":"","code":"parse_metadata(meta, data_path)"},{"path":"https://mountainmath.github.io/cansim/reference/parse_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse metadata — parse_metadata","text":"meta raw metadata table data_path base path save parsed metadata","code":""},{"path":"https://mountainmath.github.io/cansim/reference/remove_cansim_cached_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove cached cansim SQLite and parquet database — remove_cansim_cached_tables","title":"Remove cached cansim SQLite and parquet database — remove_cansim_cached_tables","text":"Remove cached cansim SQLite parquet database","code":""},{"path":"https://mountainmath.github.io/cansim/reference/remove_cansim_cached_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove cached cansim SQLite and parquet database — remove_cansim_cached_tables","text":"","code":"remove_cansim_cached_tables(   cansimTableNumber,   format = c(\"parquet\", \"feather\", \"sqlite\"),   language = NULL,   cache_path = Sys.getenv(\"CANSIM_CACHE_PATH\") )"},{"path":"https://mountainmath.github.io/cansim/reference/remove_cansim_cached_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove cached cansim SQLite and parquet database — remove_cansim_cached_tables","text":"cansimTableNumber Vector table(s) removed, (filtered) table returned `list_cansim_cached_tables` list tables removed. format Format cache remove, possible values `\"parquet\"`, `\"feather\"` `\"sqlite\"` subset (default ) language Language remove cached data. unspecified (`NULL`) tables languages removed. cache_path Optional, default value `Sys.getenv('CANSIM_CACHE_PATH')`","code":""},{"path":"https://mountainmath.github.io/cansim/reference/remove_cansim_cached_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove cached cansim SQLite and parquet database — remove_cansim_cached_tables","text":"`NULL“","code":""},{"path":"https://mountainmath.github.io/cansim/reference/remove_cansim_cached_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove cached cansim SQLite and parquet database — remove_cansim_cached_tables","text":"","code":"if (FALSE) { # \\dontrun{ con <- get_cansim_connection(\"34-10-0013\", format=\"parquet\") remove_cansim_cached_tables(\"34-10-0013\", format=\"parquet\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/remove_cansim_sqlite_cached_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove cached cansim SQLite database — remove_cansim_sqlite_cached_table","title":"Remove cached cansim SQLite database — remove_cansim_sqlite_cached_table","text":"Remove cached cansim SQLite database","code":""},{"path":"https://mountainmath.github.io/cansim/reference/remove_cansim_sqlite_cached_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove cached cansim SQLite database — remove_cansim_sqlite_cached_table","text":"","code":"remove_cansim_sqlite_cached_table(   cansimTableNumber,   language = NULL,   cache_path = Sys.getenv(\"CANSIM_CACHE_PATH\") )"},{"path":"https://mountainmath.github.io/cansim/reference/remove_cansim_sqlite_cached_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove cached cansim SQLite database — remove_cansim_sqlite_cached_table","text":"cansimTableNumber Number table removed language Language remove cached data. unspecified (`NULL`) tables languages removed cache_path Optional, default value `Sys.getenv('CANSIM_CACHE_PATH')`","code":""},{"path":"https://mountainmath.github.io/cansim/reference/remove_cansim_sqlite_cached_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove cached cansim SQLite database — remove_cansim_sqlite_cached_table","text":"`NULL“","code":""},{"path":"https://mountainmath.github.io/cansim/reference/remove_cansim_sqlite_cached_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove cached cansim SQLite database — remove_cansim_sqlite_cached_table","text":"","code":"if (FALSE) { # \\dontrun{ con <- get_cansim_connection(\"34-10-0013\", format=\"sqlite\") disconnect_cansim_sqlite(con) remove_cansim_cached_tables(\"34-10-0013\", format=\"sqlite\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/search_cansim_cubes.html","id":null,"dir":"Reference","previous_headings":"","what":"Search through Statistics Canada data cubes — search_cansim_cubes","title":"Search through Statistics Canada data cubes — search_cansim_cubes","text":"Searches Statistics Canada data cubes using search term.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/search_cansim_cubes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search through Statistics Canada data cubes — search_cansim_cubes","text":"","code":"search_cansim_cubes(search_term, refresh = FALSE)"},{"path":"https://mountainmath.github.io/cansim/reference/search_cansim_cubes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search through Statistics Canada data cubes — search_cansim_cubes","text":"search_term User-supplied search term used find Statistics Canada data cubes matching titles, table numbers, subject survey codes. refresh Default FALSE. underlying cube list cached duration R sessions regenerate cube list set TRUE","code":""},{"path":"https://mountainmath.github.io/cansim/reference/search_cansim_cubes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search through Statistics Canada data cubes — search_cansim_cubes","text":"tibble available Statistics Canada data cubes, listing title, Statistics Canada data cube catalogue number, deprecated CANSIM table number, survey subject.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/search_cansim_cubes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search through Statistics Canada data cubes — search_cansim_cubes","text":"","code":"if (FALSE) { # \\dontrun{ search_cansim_cubes(\"Labour force\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/search_cansim_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Search through Statistics Canada data tables (deprecated) — search_cansim_tables","title":"Search through Statistics Canada data tables (deprecated) — search_cansim_tables","text":"method deprecated, please use `search_cansim_cubes` instead. Searches Statistics Canada data tables using search term. new table generated already exist refresh option set TRUE. Search-terms case insensitive, accept regular expressions advanced searching. search function can search either table titles table descriptions, depending whether search_description set TRUE . refresh = TRUE, table updated regenerated using Statistics Canada's latest data. can take time since process involves scraping several hundred web pages gather required metadata. option cache_path set look store overview table directory.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/search_cansim_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search through Statistics Canada data tables (deprecated) — search_cansim_tables","text":"","code":"search_cansim_tables(search_term, search_fields = \"both\", refresh = FALSE)"},{"path":"https://mountainmath.github.io/cansim/reference/search_cansim_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search through Statistics Canada data tables (deprecated) — search_cansim_tables","text":"search_term User-supplied search term used find Statistics Canada data tables matching titles search_fields default, function search table titles keywords. Setting parameter \"title\" search title, setting \"keyword\" search keywords refresh Default FALSE, regenerate table set TRUE","code":""},{"path":"https://mountainmath.github.io/cansim/reference/search_cansim_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search through Statistics Canada data tables (deprecated) — search_cansim_tables","text":"tibble available Statistics Canada data tables, listing title, Statistics Canada data table catalogue number, deprecated CANSIM table number, description geography match search term.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/search_cansim_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search through Statistics Canada data tables (deprecated) — search_cansim_tables","text":"","code":"if (FALSE) { # \\dontrun{ search_cansim_tables(\"Labour force\") } # }"},{"path":"https://mountainmath.github.io/cansim/reference/set_cansim_cache_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Set persistent cansim cache location — set_cansim_cache_path","title":"Set persistent cansim cache location — set_cansim_cache_path","text":"Cansim provides session caching retrieved data. function create persistent cache across sessions data accessed via `get_cansim_connection` caches data database across sessions..","code":""},{"path":"https://mountainmath.github.io/cansim/reference/set_cansim_cache_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set persistent cansim cache location — set_cansim_cache_path","text":"","code":"set_cansim_cache_path(cache_path, overwrite = FALSE, install = FALSE)"},{"path":"https://mountainmath.github.io/cansim/reference/set_cansim_cache_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set persistent cansim cache location — set_cansim_cache_path","text":"cache_path local directory use saving cached data overwrite Option overwrite existing cache path already stored locally. install Option install permanently use across sessions.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/set_cansim_cache_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set persistent cansim cache location — set_cansim_cache_path","text":"","code":"if (FALSE) { # \\dontrun{ set_cansim_cache_path(\"~/cansim_cache\")  # This will set the cache path permanently until overwritten again set_cansim_cache_path(\"~/cancensus_cache\", install = TRUE) } # }"},{"path":"https://mountainmath.github.io/cansim/reference/show_cansim_cache_path.html","id":null,"dir":"Reference","previous_headings":"","what":"View saved cache directory path — show_cansim_cache_path","title":"View saved cache directory path — show_cansim_cache_path","text":"View saved cache path'","code":""},{"path":"https://mountainmath.github.io/cansim/reference/show_cansim_cache_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View saved cache directory path — show_cansim_cache_path","text":"","code":"show_cansim_cache_path()"},{"path":"https://mountainmath.github.io/cansim/reference/show_cansim_cache_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View saved cache directory path — show_cansim_cache_path","text":"","code":"show_cansim_cache_path() #> Cache path is set via legacy option 'cansim.cache_path', #> please consider setting the cache path via environment variables using #> `set_cansim_cache_path(getOption('cansim.cache_path'), install = TRUE)` #> [1] \"/Users/jens/data/cansim.data\""},{"path":"https://mountainmath.github.io/cansim/reference/view_cansim_webpage.html","id":null,"dir":"Reference","previous_headings":"","what":"View CANSIM table or vector information in browser — view_cansim_webpage","title":"View CANSIM table or vector information in browser — view_cansim_webpage","text":"Opens CANSIM table vector Statistics Canada's website using default browser. may useful getting info CANSIM table survey methods.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/view_cansim_webpage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View CANSIM table or vector information in browser — view_cansim_webpage","text":"","code":"view_cansim_webpage(cansimTableNumber = NULL)"},{"path":"https://mountainmath.github.io/cansim/reference/view_cansim_webpage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View CANSIM table or vector information in browser — view_cansim_webpage","text":"cansimTableNumber CANSIM NDM table number cansim vectors \"v\" prefix. number provided, vector search page Statistic Canada website opened.","code":""},{"path":"https://mountainmath.github.io/cansim/reference/view_cansim_webpage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View CANSIM table or vector information in browser — view_cansim_webpage","text":"none","code":""},{"path":"https://mountainmath.github.io/cansim/reference/view_cansim_webpage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View CANSIM table or vector information in browser — view_cansim_webpage","text":"","code":"if (FALSE) { # \\dontrun{ view_cansim_webpage(\"34-10-0013\") } # }"},{"path":[]},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-4-4","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.4.4","text":"fix problem metadata parsing work properly table names make documentations consistent wrt default langauge names add convenience functions setting cache paths data accessed via get_cansim_connection","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-043","dir":"Changelog","previous_headings":"","what":"cansim 0.4.3","title":"cansim 0.4.3","text":"CRAN release: 2025-05-30","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-4-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.4.3","text":"better handling duplicated levels metadata, ignore duplication geography names census tables emit warning fix issue accessing tables without footnotes","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-042","dir":"Changelog","previous_headings":"","what":"cansim 0.4.2","title":"cansim 0.4.2","text":"CRAN release: 2025-05-12","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-4-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.4.2","text":"ensure proper ordering levels even StatCan metadata ordered better error messages information disable peer checking StatCan SSL certificates problems automatically batch vector coordinate data retrieval case users request 300 series time ## Major changes enable series information table coordinate generate table template facilitate adding vector info aid pinpointed data download enable downloading data vector multiple coordinates get_cansim_data_for_table_coord_periods (breaking changes change parameter)","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-041","dir":"Changelog","previous_headings":"","what":"cansim 0.4.1","title":"cansim 0.4.1","text":"CRAN release: 2025-03-15","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-4-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.4.1","text":"fix problem parsing census data tables fix problem converting factors classification codes attached.","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-04","dir":"Changelog","previous_headings":"","what":"cansim 0.4","title":"cansim 0.4","text":"CRAN release: 2025-02-24","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"major-changes-0-4","dir":"Changelog","previous_headings":"","what":"Major changes","title":"cansim 0.4","text":"add support local caching parquet feather formats uniform interface sqlite, parquet, feather caching principled approach column order ## Minor changes fix problem inconsistent type parsing notes better support french language accessing data vector coordinate tests","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-0317","dir":"Changelog","previous_headings":"","what":"cansim 0.3.17","title":"cansim 0.3.17","text":"CRAN release: 2024-11-06","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-17","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.17","text":"fix problem reading French tables released census division restore original column order converting factors convert geography column factor available fix problem add_provincial_abbreviations lead mislabelling provinces cases improve handling metadata, enable downloading metadata instead via full table download fold metadata data accessing via vector coordinates allow cansim vectors view_cansim_webpage view vector information statcan browser","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-0316","dir":"Changelog","previous_headings":"","what":"cansim 0.3.16","title":"cansim 0.3.16","text":"CRAN release: 2024-03-12","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-16","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.16","text":"improve offline handling StatCan servers improve metadata handling Member ID order mixed metadata fix problem refreshing data get_cansim_vectors","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-0315","dir":"Changelog","previous_headings":"","what":"cansim 0.3.15","title":"cansim 0.3.15","text":"CRAN release: 2023-10-10","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-15","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.15","text":"accommodate quirks table 98-10-0017","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-0314","dir":"Changelog","previous_headings":"","what":"cansim 0.3.14","title":"cansim 0.3.14","text":"CRAN release: 2023-01-20","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-14","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.14","text":"Better header parsing avoid warning messages Fix problem semi-wide tables","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-0313","dir":"Changelog","previous_headings":"","what":"cansim 0.3.13","title":"cansim 0.3.13","text":"CRAN release: 2022-11-07","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-13","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.13","text":"Speed access cached sqlite tables Fix problem get_cansim_vector_info()","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-0312","dir":"Changelog","previous_headings":"","what":"cansim 0.3.12","title":"cansim 0.3.12","text":"CRAN release: 2022-07-12","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"major-changes-0-3-12","dir":"Changelog","previous_headings":"","what":"Major changes","title":"cansim 0.3.12","text":"Fix bug causes collect_and_normalize function operating systems","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-0311","dir":"Changelog","previous_headings":"","what":"cansim 0.3.11","title":"cansim 0.3.11","text":"CRAN release: 2022-05-10","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"major-changes-0-3-11","dir":"Changelog","previous_headings":"","what":"Major changes","title":"cansim 0.3.11","text":"Support new semi-wide table format, e.g. Census data releases ## Minor changes Improvement offline handling sqlite tables","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-0310","dir":"Changelog","previous_headings":"","what":"cansim 0.3.10","title":"cansim 0.3.10","text":"CRAN release: 2021-09-27","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-10","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.10","text":"Better error handling StatCan returns empty tables Add Hierarchy Geography sqlite tables Better fallback warning messages StatCan table categories internally inconsistent Performance improvements","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-039","dir":"Changelog","previous_headings":"","what":"cansim 0.3.9","title":"cansim 0.3.9","text":"CRAN release: 2021-07-29","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"major-changes-0-3-9","dir":"Changelog","previous_headings":"","what":"Major changes","title":"cansim 0.3.9","text":"deprecate list_cansim_tables serach_cansim_tables fallback corresponding “_cube” methods Open Data Canada API changed similar functionality available “_cube” methods tie directly StatCan APIS ## Minor changes Fix issues top level duplicate categories Check expired tables list_cansim_sqlite_cached_tables New auto-update feature sqlite tables","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-038","dir":"Changelog","previous_headings":"","what":"cansim 0.3.8","title":"cansim 0.3.8","text":"CRAN release: 2021-05-27","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-8","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.8","text":"Exclude vignette automatic CRAN checks fix problem CRAN checks failing StatCan servers lead package removed CRAN (checks still active local environment using GitHub action checks) add release date info cube metadata cube list calls add auto-refresh option sqlite tables remove deprecated adjust_cansim_values_by_variable function","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-037","dir":"Changelog","previous_headings":"","what":"cansim 0.3.7","title":"cansim 0.3.7","text":"CRAN release: 2021-05-10","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-7","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.7","text":"Fix problem UTF-8 encoding solaris move dbplyr dependence Imports Suggests","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-036","dir":"Changelog","previous_headings":"","what":"cansim 0.3.6","title":"cansim 0.3.6","text":"CRAN release: 2021-05-08","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"major-changes-0-3-6","dir":"Changelog","previous_headings":"","what":"Major changes","title":"cansim 0.3.6","text":"Fold part normalize_cansim_values default table vector output, particular always add scaled variable column called val_norm imputed Date column covert categories factors default. New get_cansim_sqlite function stores tables SQLite database facilitates access management data.","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-6","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.6","text":"Adapt changes dplyr, tidyr, tibble fix bug properly add hierarchies category names repeated Use system unzip getOption(\"unzip\") set enable unzip files larger 4GB unix-like systems","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-035","dir":"Changelog","previous_headings":"","what":"cansim 0.3.5","title":"cansim 0.3.5","text":"CRAN release: 2020-03-13","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-5","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.5","text":"Exclude vignettes example code compilation may cause CRAN check errors StatCan servers otherwise temporarily unavailable","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-034","dir":"Changelog","previous_headings":"","what":"cansim 0.3.4","title":"cansim 0.3.4","text":"CRAN release: 2020-03-05","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-4","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.4","text":"Expand get_cansim_table_notes() functionality Add functionality access new cube list API","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-033","dir":"Changelog","previous_headings":"","what":"cansim 0.3.3","title":"cansim 0.3.3","text":"CRAN release: 2019-10-15","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.3","text":"Fix time zone problem parsing formatting times StatCan API","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-032","dir":"Changelog","previous_headings":"","what":"cansim 0.3.2","title":"cansim 0.3.2","text":"CRAN release: 2019-08-26","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.2","text":"Adjust package changes StatCan API different metadata format","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-031","dir":"Changelog","previous_headings":"","what":"cansim 0.3.1","title":"cansim 0.3.1","text":"CRAN release: 2019-08-19","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"major-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"Major changes","title":"cansim 0.3.1","text":"Fixes issues arising StatCan changing API row limit","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.1","text":"Optimize vector retrieval REF_DATE","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-030","dir":"Changelog","previous_headings":"","what":"cansim 0.3.0","title":"cansim 0.3.0","text":"CRAN release: 2019-07-18","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.3.0","text":"Fixes issues arising StatCan changing API Member Names come concatenated Classification Code default, break existing code. Adds option change fields factors Adds option strip Classification Codes fields Exposes timeout limit deal slow connections large tables","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-023","dir":"Changelog","previous_headings":"","what":"cansim 0.2.3","title":"cansim 0.2.3","text":"CRAN release: 2019-01-07","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"minor-changes-0-2-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"cansim 0.2.3","text":"robust table download functions Improved documentation","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"cansim-022","dir":"Changelog","previous_headings":"","what":"cansim 0.2.2","title":"cansim 0.2.2","text":"CRAN release: 2018-12-18","code":""},{"path":"https://mountainmath.github.io/cansim/news/index.html","id":"major-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Major changes","title":"cansim 0.2.2","text":"Initial CRAN release French metadata implemented","code":""}]
